// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ZKFaultDisputeGameMetaData contains all meta data concerning the ZKFaultDisputeGame contract.
var ZKFaultDisputeGameMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_gameType\",\"type\":\"uint32\",\"internalType\":\"GameType\"},{\"name\":\"_maxGenerateProofDuration\",\"type\":\"uint64\",\"internalType\":\"Duration\"},{\"name\":\"_maxDetectFaultDuration\",\"type\":\"uint64\",\"internalType\":\"Duration\"},{\"name\":\"_CHALLENGER_REWARD_PERCENTAGE\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_PROVER_REWARD_PERCENTAGE\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_weth\",\"type\":\"address\",\"internalType\":\"contractIDelayedWETH\"},{\"name\":\"_anchorStateRegistry\",\"type\":\"address\",\"internalType\":\"contractIAnchorStateRegistry\"},{\"name\":\"_config\",\"type\":\"address\",\"internalType\":\"contractZkFaultProofConfig\"},{\"name\":\"_l2ChainId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"BURN_ADDRESS\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CHALLENGER_BOND\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CHALLENGER_REWARD_PERCENTAGE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PERCENTAGE_DIVISOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PROPOSER_BOND\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PROVER_REWARD_PERCENTAGE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"anchorStateRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"registry_\",\"type\":\"address\",\"internalType\":\"contractIAnchorStateRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengeByProof\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_expectedClaim\",\"type\":\"bytes32\",\"internalType\":\"Claim\"},{\"name\":\"_originalClaims\",\"type\":\"bytes32[]\",\"internalType\":\"Claim[]\"},{\"name\":\"_proof\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"challengeBySignal\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"challengedClaimIndexes\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengedClaims\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengedClaimsTimestamp\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengers\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"claimsHash\",\"inputs\":[],\"outputs\":[{\"name\":\"claimsHash_\",\"type\":\"bytes32\",\"internalType\":\"Hash\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"claimsLength\",\"inputs\":[],\"outputs\":[{\"name\":\"claimsLength_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"config\",\"inputs\":[],\"outputs\":[{\"name\":\"config_\",\"type\":\"address\",\"internalType\":\"contractZkFaultProofConfig\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"createdAt\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"Timestamp\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"extraData\",\"inputs\":[],\"outputs\":[{\"name\":\"extraData_\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"faultProofProver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"gameCreator\",\"inputs\":[],\"outputs\":[{\"name\":\"creator_\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"gameData\",\"inputs\":[],\"outputs\":[{\"name\":\"gameType_\",\"type\":\"uint32\",\"internalType\":\"GameType\"},{\"name\":\"rootClaim_\",\"type\":\"bytes32\",\"internalType\":\"Claim\"},{\"name\":\"extraData_\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"gameType\",\"inputs\":[],\"outputs\":[{\"name\":\"gameType_\",\"type\":\"uint32\",\"internalType\":\"GameType\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"gameWinner\",\"inputs\":[],\"outputs\":[{\"name\":\"gameWinner_\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"invalidChallengeClaimIndexes\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"invalidChallengeClaims\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isChallengeSuccess\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"l1Head\",\"inputs\":[],\"outputs\":[{\"name\":\"l1Head_\",\"type\":\"bytes32\",\"internalType\":\"Hash\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"l2BlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"l2BlockNumber_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"l2ChainId\",\"inputs\":[],\"outputs\":[{\"name\":\"l2ChainId_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxClockDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"maxClockDuration_\",\"type\":\"uint64\",\"internalType\":\"Duration\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxDetectFaultDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"maxDetectFaultDuration_\",\"type\":\"uint64\",\"internalType\":\"Duration\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxGenerateProofDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"maxGenerateProofDuration_\",\"type\":\"uint64\",\"internalType\":\"Duration\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"parentGameProxy\",\"inputs\":[],\"outputs\":[{\"name\":\"parentGameProxy_\",\"type\":\"address\",\"internalType\":\"contractIZkFaultDisputeGame\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"resolve\",\"inputs\":[],\"outputs\":[{\"name\":\"status_\",\"type\":\"uint8\",\"internalType\":\"enumGameStatus\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"resolveClaim\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"resolvedAt\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"Timestamp\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"rootClaim\",\"inputs\":[],\"outputs\":[{\"name\":\"rootClaim_\",\"type\":\"bytes32\",\"internalType\":\"Claim\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"startingBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"startingBlockNumber_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"startingOutputRoot\",\"inputs\":[],\"outputs\":[{\"name\":\"root\",\"type\":\"bytes32\",\"internalType\":\"Hash\"},{\"name\":\"l2BlockNumber\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"startingRootHash\",\"inputs\":[],\"outputs\":[{\"name\":\"startingRootHash_\",\"type\":\"bytes32\",\"internalType\":\"Hash\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"status\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"enumGameStatus\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"submitProofForSignal\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_originalClaims\",\"type\":\"bytes32[]\",\"internalType\":\"Claim[]\"},{\"name\":\"_proof\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"successfulChallengeIndex\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"validityProofProvers\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"weth\",\"inputs\":[],\"outputs\":[{\"name\":\"weth_\",\"type\":\"address\",\"internalType\":\"contractIDelayedWETH\"}],\"stateMutability\":\"view\"},{\"type\":\"event\",\"name\":\"Resolved\",\"inputs\":[{\"name\":\"status\",\"type\":\"uint8\",\"indexed\":true,\"internalType\":\"enumGameStatus\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"AlreadyInitialized\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"AnchorRootNotFound\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ChallengeAlreadyInvalid\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClaimAlreadyChallenged\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClaimNotChallenged\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClockNotExpired\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClockTimeExceeded\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"GameChallengeSucceeded\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"GameNotInProgress\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"IncorrectBondAmount\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidClaimsLength\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidDisputeClaimIndex\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidExpectedClaim\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidGameStatus\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidOriginClaims\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidRewardPercentage\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NoExpiredChallenges\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ParentGameIsInvalid\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ParentGameNotResolved\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"UnexpectedRootClaim\",\"inputs\":[{\"name\":\"rootClaim\",\"type\":\"bytes32\",\"internalType\":\"Claim\"}]},{\"type\":\"error\",\"name\":\"UnresolvedChallenges\",\"inputs\":[]}]",
	Bin: "0x6101c06040523480156200001257600080fd5b5060405162003a5e38038062003a5e83398101604081905262000035916200014d565b63ffffffff891660e0526001600160401b0380891660a052871660c0526101808690526101a08590526127106200006d868862000217565b11156200008d57604051632b72818d60e01b815260040160405180910390fd5b620000ae60c0516001600160401b03166200011460201b62000db81760201c565b620000cf60a0516001600160401b03166200011460201b62000db81760201c565b620000db919062000232565b6001600160401b03166080526001600160a01b039384166101005291831661012052909116610140526101605250620002609350505050565b90565b80516001600160401b03811681146200012f57600080fd5b919050565b6001600160a01b03811681146200014a57600080fd5b50565b60008060008060008060008060006101208a8c0312156200016d57600080fd5b895163ffffffff811681146200018257600080fd5b98506200019260208b0162000117565b9750620001a260408b0162000117565b965060608a0151955060808a0151945060a08a0151620001c28162000134565b60c08b0151909450620001d58162000134565b60e08b0151909350620001e88162000134565b809250506101008a015190509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b600082198211156200022d576200022d62000201565b500190565b60006001600160401b0382811684821680830382111562000257576200025762000201565b01949350505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516136cc62000392600039600081816109e2015281816118f80152611a01015260008181610732015281816117fa015261187b015260008181610a1301528181610fbe015261289f0152600081816106f401528181610e9101528181610fe4015281816110780152818161110e015281816111bb0152818161238801528181612790015281816128c501528181612959015281816129ef0152612a9c0152600081816105f401528181611c230152612082015260006104c00152600081816108670152818161203e0152612fa301526000818161055e0152612d480152600081816105c101528181610cec0152611def015260008181610a460152818161159f015261256401526136cc6000f3fe6080604052600436106103085760003560e01c8063853b7f3f1161019a578063caf29765116100e1578063db8cb9621161008a578063f1126de111610064578063f1126de114610adb578063fa24f74314610b1b578063fccc281314610b3f57600080fd5b8063db8cb96214610a6a578063e5d5f2e714610a8a578063edcf913b14610aa457600080fd5b8063d60d026d116100bb578063d60d026d146109d0578063d6ae3cd514610a04578063dabd396d14610a3757600080fd5b8063caf2976514610969578063cd4fb3fc1461097f578063cf09e0d0146109af57600080fd5b8063bb825afc11610143578063c1eee53e1161011d578063c1eee53e146108d1578063c6f647b814610914578063c94f598b1461095457600080fd5b8063bb825afc1461039e578063bbdc02db14610850578063bcef3b551461089157600080fd5b80638e0386ba116101745780638e0386ba146107da5780639ba51b73146107fa578063aa23fddc1461080d57600080fd5b8063853b7f3f14610720578063864cbb35146107545780638b85902b1461079757600080fd5b806354fd4d501161025e5780636361506d116102075780637720772d116101e15780637720772d146106c557806379502c55146106e55780638129fc1c1461071857600080fd5b80636361506d1461062d5780636b45ebcb1461066d57806370872aa5146106b057600080fd5b80635ba42ed4116102385780635ba42ed4146105b25780635c0cba33146105e5578063609d33341461061857600080fd5b806354fd4d50146104f9578063573357051461054f57806357da950e1461058257600080fd5b806325fc2ace116102c057806337b1b2291161029a57806337b1b229146104715780633fc8cef3146104b15780634bf8f327146104e457600080fd5b806325fc2ace146103f55780632810e1d61461040a57806335a66eba1461041f57600080fd5b80631ad7e0e2116102f15780631ad7e0e21461037c5780631ef7a1f71461039e578063200d2ed2146103ba57600080fd5b806319effeb41461030d5780631a27d15814610358575b600080fd5b34801561031957600080fd5b5060005461033a9068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561036457600080fd5b5061036e600a5481565b60405190815260200161034f565b34801561038857600080fd5b5061039c610397366004613212565b610b54565b005b3480156103aa57600080fd5b5061036e670de0b6b3a764000081565b3480156103c657600080fd5b506000546103e890700100000000000000000000000000000000900460ff1681565b60405161034f91906132bb565b34801561040157600080fd5b50600b5461036e565b34801561041657600080fd5b506103e86113aa565b34801561042b57600080fd5b5060055461044c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161034f565b34801561047d57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560601c61044c565b3480156104bd57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061044c565b3480156104f057600080fd5b5061039c611caa565b34801561050557600080fd5b506105426040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b60405161034f9190613367565b34801561055b57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061033a565b34801561058e57600080fd5b50600b54600c5461059d919082565b6040805192835260208301919091520161034f565b3480156105be57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061033a565b3480156105f157600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061044c565b34801561062457600080fd5b50610542611f5d565b34801561063957600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036034013561036e565b34801561067957600080fd5b5061044c610688366004613381565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156106bc57600080fd5b50600c5461036e565b3480156106d157600080fd5b5061036e6106e0366004613381565b611f6b565b3480156106f157600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061044c565b61039c611f8c565b34801561072c57600080fd5b5061036e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561076057600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036078013560601c61044c565b3480156107a357600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003608c013560c01c61036e565b3480156107e657600080fd5b5061039c6107f536600461339a565b6124a6565b61039c610808366004613381565b612c49565b34801561081957600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013560e01c61036e565b34801561085c57600080fd5b5060405163ffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161034f565b34801561089d57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036014013561036e565b3480156108dd57600080fd5b5061044c6108ec366004613381565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561092057600080fd5b5061094461092f366004613381565b60076020526000908152604090205460ff1681565b604051901515815260200161034f565b34801561096057600080fd5b5061044c612f3a565b34801561097557600080fd5b5061036e61271081565b34801561098b57600080fd5b5061094461099a366004613381565b60016020526000908152604090205460ff1681565b3480156109bb57600080fd5b5060005461033a9067ffffffffffffffff1681565b3480156109dc57600080fd5b5061036e7f000000000000000000000000000000000000000000000000000000000000000081565b348015610a1057600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061036e565b348015610a4357600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061033a565b348015610a7657600080fd5b5061036e610a85366004613381565b612f91565b348015610a9657600080fd5b506009546109449060ff1681565b348015610ab057600080fd5b5061033a610abf366004613381565b60036020526000908152604090205467ffffffffffffffff1681565b348015610ae757600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036054013561036e565b348015610b2757600080fd5b50610b30612fa1565b60405161034f9392919061341d565b348015610b4b57600080fd5b5061044c600081565b60008054700100000000000000000000000000000000900460ff166002811115610b8057610b8061328c565b14610bb7576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001610bc1613001565b6002811115610bd257610bd261328c565b03610c09576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60095460ff1615610c46576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008581526001602052604090205460ff16610c8e576040517fa0c6986900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008581526007602052604090205460ff1615610cd7576040517f40e2452900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085815260036020526040902054610d1b907f00000000000000000000000000000000000000000000000000000000000000009067ffffffffffffffff166130dd565b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013560e01c8314610d84576040517ff309b94f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dbb367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036054013590565b90565b8484604051602001610dce92919061344b565b6040516020818303038152906040528051906020012014610e1b576040517fb481ac5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828510610e54576040517f1ddafb1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085600003610e675750600b54610e8d565b8484610e746001896134a9565b818110610e8357610e836134c0565b9050602002013590505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166337416d826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e91906134ef565b610f29886001613508565b610f339190613520565b600c54610f409190613508565b905060006040518060e00160405280610f87610db860347ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c9003013590565b8152602001848152602001610fb189898c818110610fa757610fa76134c0565b9050602002013590565b81526020018381526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636d9a1c8b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107191906134ef565b81526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632b31841e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110591906134ef565b815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fb3c491c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b919061357f565b90508073ffffffffffffffffffffffffffffffffffffffff166341493c607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c32e4e3e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611224573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124891906134ef565b846040516020016112a29190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405160208183030381529060405289896040518563ffffffff1660e01b81526004016112d2949392919061359c565b60006040518083038186803b1580156112ea57600080fd5b505afa1580156112fe573d6000803e3d6000fd5b50505060008a815260066020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556007909152812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30199909955505050505050505050565b600080600054700100000000000000000000000000000000900460ff1660028111156113d8576113d861328c565b1461140f576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611419613001565b9050600081600281111561142f5761142f61328c565b03611466576040517f92c506ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181600281111561147a5761147a61328c565b036115685760019150367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036078013560601c73ffffffffffffffffffffffffffffffffffffffff1663c94f598b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611522919061357f565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555b60095460ff161561157857600191505b600182600281111561158c5761158c61328c565b146116945760005467ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116916115cc9116426134a9565b11611603576040517ff2440b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60025481101561168e576007600060028381548110611627576116276134c0565b6000918252602080832090910154835282019290925260400190205460ff1661167c576040517f965022d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061168681613607565b915050611606565b50600291505b60018260028111156116a8576116a861328c565b036119875760005b6002548110156117815760076000600283815481106116d1576116d16134c0565b6000918252602080832090910154835282019290925260400190205460ff1661176f57600460006002838154811061170b5761170b6134c0565b600091825260208083209091015483528201929092526040908101822054905173ffffffffffffffffffffffffffffffffffffffff9091169190670de0b6b3a76400009082818181858883f1935050505015801561176d573d6000803e3d6000fd5b505b8061177981613607565b9150506116b0565b50600954479060ff1680156117a8575060018260028111156117a5576117a561328c565b14155b156118d457600a5460009081526001602052604090205460ff161561185757600a5460009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff166108fc61271061181f7f000000000000000000000000000000000000000000000000000000000000000085613520565b611829919061363f565b6040518115909202916000818181858888f19350505050158015611851573d6000803e3d6000fd5b506118d4565b60055473ffffffffffffffffffffffffffffffffffffffff166108fc6127106118a07f000000000000000000000000000000000000000000000000000000000000000085613520565b6118aa919061363f565b6040518115909202916000818181858888f193505050501580156118d2573d6000803e3d6000fd5b505b60055473ffffffffffffffffffffffffffffffffffffffff166108fc61271061191d7f000000000000000000000000000000000000000000000000000000000000000085613520565b611927919061363f565b6040518115909202916000818181858888f1935050505015801561194f573d6000803e3d6000fd5b5050604051479060009082156108fc0290839083818181858288f19350505050158015611980573d6000803e3d6000fd5b5050611b33565b600282600281111561199b5761199b61328c565b03611b015760005b600854811015611a735760066000600883815481106119c4576119c46134c0565b6000918252602080832090910154835282019290925260400190205473ffffffffffffffffffffffffffffffffffffffff166108fc612710611a2e7f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613520565b611a38919061363f565b6040518115909202916000818181858888f19350505050158015611a60573d6000803e3d6000fd5b5080611a6b81613607565b9150506119a3565b50604051367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560601c90600090670de0b6b3a76400009082818181858883f19350505050158015611ad1573d6000803e3d6000fd5b50604051479060009082156108fc0290839083818181858288f19350505050158015611980573d6000803e3d6000fd5b6040517f8f8af25f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff8116680100000000000000004267ffffffffffffffff160290811783558492917fffffffffffffffffffffffffffffff000000000000000000ffffffffffffffff167fffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffff90911617700100000000000000000000000000000000836002811115611be357611be361328c565b021790556002811115611bf857611bf861328c565b6040517f5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da6090600090a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663838c2d1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611c8957600080fd5b505af1158015611c9d573d6000803e3d6000fd5b505050505090565b905090565b60008054700100000000000000000000000000000000900460ff166002811115611cd657611cd661328c565b14611d0d576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001611d17613001565b6002811115611d2857611d2861328c565b03611d5f576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60095460ff1615611d9c576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b600254811015611f22576007600060028381548110611dc157611dc16134c0565b6000918252602080832090910154835282019290925260400190205460ff16611f105767ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001667ffffffffffffffff166003600060028481548110611e3057611e306134c0565b60009182526020808320909101548352820192909252604001902054611e609067ffffffffffffffff16426134a9565b1115611f1057600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556002805482908110611ea557611ea56134c0565b6000918252602080832090910154600a8190558252600490526040902054600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905560019150611f22565b80611f1a81613607565b915050611da0565b5080611f5a576040517f4d35406900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6060611ca560546040613132565b60028181548110611f7b57600080fd5b600091825260209091200154905081565b60005471010000000000000000000000000000000000900460ff1615611fde576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036078013560601c6040517f7258a80700000000000000000000000000000000000000000000000000000000815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152909150600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637258a807906024016040805180830381865afa1580156120c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ec919061367a565b909250905073ffffffffffffffffffffffffffffffffffffffff8316156122445761217f8373ffffffffffffffffffffffffffffffffffffffff1663bcef3b556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561215b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906134ef565b91508273ffffffffffffffffffffffffffffffffffffffff16638b85902b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f091906134ef565b905060016121fc613001565b600281111561220d5761220d61328c565b03612244576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161227b576040517f6a6bc3b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152828152602001819052600b829055600c81905536609a146122ae57639824bdab6000526004601cfd5b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003608c013560c01c81811161234b576040517ff40239db000000000000000000000000000000000000000000000000000000008152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360140135600482015260240160405180910390fd5b61235582826134a9565b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013560e01c7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166337416d826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241591906134ef565b61241f9190613520565b14612456576040517ff309b94f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506000805467ffffffffffffffff42167fffffffffffffffffffffffffffff00ffffffffffffffffff000000000000000090911617710100000000000000000000000000000000001790555050565b60008054700100000000000000000000000000000000900460ff1660028111156124d2576124d261328c565b14612509576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001612513613001565b60028111156125245761252461328c565b0361255b576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600054612593907f00000000000000000000000000000000000000000000000000000000000000009067ffffffffffffffff166130dd565b60095460ff16156125d0576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013560e01c8314612639576040517ff309b94f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61266d367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036054013590565b848460405160200161268092919061344b565b60405160208183030381529060405280519060200120146126cd576040517fb481ac5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828610612706576040517f1ddafb1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61271b848488818110610fa757610fa76134c0565b8503612753576040517f2b9890d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000866000036127665750600b5461278c565b848461277360018a6134a9565b818110612782576127826134c0565b9050602002013590505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166337416d826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061281d91906134ef565b612828896001613508565b6128329190613520565b600c5461283f9190613508565b905060006040518060e00160405280612886610db860347ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c9003013590565b81526020018481526020018981526020018381526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636d9a1c8b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561292e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061295291906134ef565b81526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632b31841e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156129c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e691906134ef565b815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fb3c491c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a7c919061357f565b90508073ffffffffffffffffffffffffffffffffffffffff166341493c607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c32e4e3e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2991906134ef565b84604051602001612b839190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405160208183030381529060405289896040518563ffffffff1660e01b8152600401612bb3949392919061359c565b60006040518083038186803b158015612bcb57600080fd5b505afa158015612bdf573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505050600a989098555050600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055505050505050565b670de0b6b3a76400003414612c8a576040517f8620aa1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054700100000000000000000000000000000000900460ff166002811115612cb657612cb661328c565b14612ced576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001612cf7613001565b6002811115612d0857612d0861328c565b03612d3f576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600054612d77907f00000000000000000000000000000000000000000000000000000000000000009067ffffffffffffffff166130dd565b60095460ff1615612db4576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602052604090205460ff1615612dfd576040517f85c345b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013560e01c8110612e66576040517f1ddafb1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260016020818152604080842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168417905560038252808420805467ffffffffffffffff42167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009091161790556004909152822080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556002805491820181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b60006001600054700100000000000000000000000000000000900460ff166002811115612f6957612f6961328c565b14612f745750600090565b5060055473ffffffffffffffffffffffffffffffffffffffff1690565b60088181548110611f7b57600080fd5b7f0000000000000000000000000000000000000000000000000000000000000000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003601401356060612ffa611f5d565b9050909192565b6000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036078013560601c61303e5750600290565b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036078013560601c73ffffffffffffffffffffffffffffffffffffffff1663200d2ed26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca5919061369e565b67ffffffffffffffff828116906130f6908316426134a9565b111561312e576040517f3381d11400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b604051818152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90038284820160208401378260208301016000815260208101604052505092915050565b60008083601f84011261319657600080fd5b50813567ffffffffffffffff8111156131ae57600080fd5b6020830191508360208260051b85010111156131c957600080fd5b9250929050565b60008083601f8401126131e257600080fd5b50813567ffffffffffffffff8111156131fa57600080fd5b6020830191508360208285010111156131c957600080fd5b60008060008060006060868803121561322a57600080fd5b85359450602086013567ffffffffffffffff8082111561324957600080fd5b61325589838a01613184565b9096509450604088013591508082111561326e57600080fd5b5061327b888289016131d0565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600383106132f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000815180845260005b8181101561332257602081850181015186830182015201613306565b81811115613334576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061337a60208301846132fc565b9392505050565b60006020828403121561339357600080fd5b5035919050565b600080600080600080608087890312156133b357600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156133d957600080fd5b6133e58a838b01613184565b909650945060608901359150808211156133fe57600080fd5b5061340b89828a016131d0565b979a9699509497509295939492505050565b63ffffffff8416815282602082015260606040820152600061344260608301846132fc565b95945050505050565b60008184825b8581101561346f578135835260209283019290910190600101613451565b509095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156134bb576134bb61347a565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561350157600080fd5b5051919050565b6000821982111561351b5761351b61347a565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156135585761355861347a565b500290565b73ffffffffffffffffffffffffffffffffffffffff81168114611f5a57600080fd5b60006020828403121561359157600080fd5b815161337a8161355d565b8481526060602082015260006135b560608301866132fc565b82810360408401528381528385602083013760006020858301015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011682010191505095945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036136385761363861347a565b5060010190565b600082613675577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000806040838503121561368d57600080fd5b505080516020909101519092909150565b6000602082840312156136b057600080fd5b81516003811061337a57600080fdfea164736f6c634300080f000a",
}

// ZKFaultDisputeGameABI is the input ABI used to generate the binding from.
// Deprecated: Use ZKFaultDisputeGameMetaData.ABI instead.
var ZKFaultDisputeGameABI = ZKFaultDisputeGameMetaData.ABI

// ZKFaultDisputeGameBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ZKFaultDisputeGameMetaData.Bin instead.
var ZKFaultDisputeGameBin = ZKFaultDisputeGameMetaData.Bin

// DeployZKFaultDisputeGame deploys a new Ethereum contract, binding an instance of ZKFaultDisputeGame to it.
func DeployZKFaultDisputeGame(auth *bind.TransactOpts, backend bind.ContractBackend, _gameType uint32, _maxGenerateProofDuration uint64, _maxDetectFaultDuration uint64, _CHALLENGER_REWARD_PERCENTAGE *big.Int, _PROVER_REWARD_PERCENTAGE *big.Int, _weth common.Address, _anchorStateRegistry common.Address, _config common.Address, _l2ChainId *big.Int) (common.Address, *types.Transaction, *ZKFaultDisputeGame, error) {
	parsed, err := ZKFaultDisputeGameMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ZKFaultDisputeGameBin), backend, _gameType, _maxGenerateProofDuration, _maxDetectFaultDuration, _CHALLENGER_REWARD_PERCENTAGE, _PROVER_REWARD_PERCENTAGE, _weth, _anchorStateRegistry, _config, _l2ChainId)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ZKFaultDisputeGame{ZKFaultDisputeGameCaller: ZKFaultDisputeGameCaller{contract: contract}, ZKFaultDisputeGameTransactor: ZKFaultDisputeGameTransactor{contract: contract}, ZKFaultDisputeGameFilterer: ZKFaultDisputeGameFilterer{contract: contract}}, nil
}

// ZKFaultDisputeGame is an auto generated Go binding around an Ethereum contract.
type ZKFaultDisputeGame struct {
	ZKFaultDisputeGameCaller     // Read-only binding to the contract
	ZKFaultDisputeGameTransactor // Write-only binding to the contract
	ZKFaultDisputeGameFilterer   // Log filterer for contract events
}

// ZKFaultDisputeGameCaller is an auto generated read-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZKFaultDisputeGameTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZKFaultDisputeGameFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ZKFaultDisputeGameFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZKFaultDisputeGameSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ZKFaultDisputeGameSession struct {
	Contract     *ZKFaultDisputeGame // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ZKFaultDisputeGameCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ZKFaultDisputeGameCallerSession struct {
	Contract *ZKFaultDisputeGameCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// ZKFaultDisputeGameTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ZKFaultDisputeGameTransactorSession struct {
	Contract     *ZKFaultDisputeGameTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// ZKFaultDisputeGameRaw is an auto generated low-level Go binding around an Ethereum contract.
type ZKFaultDisputeGameRaw struct {
	Contract *ZKFaultDisputeGame // Generic contract binding to access the raw methods on
}

// ZKFaultDisputeGameCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameCallerRaw struct {
	Contract *ZKFaultDisputeGameCaller // Generic read-only contract binding to access the raw methods on
}

// ZKFaultDisputeGameTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameTransactorRaw struct {
	Contract *ZKFaultDisputeGameTransactor // Generic write-only contract binding to access the raw methods on
}

// NewZKFaultDisputeGame creates a new instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGame(address common.Address, backend bind.ContractBackend) (*ZKFaultDisputeGame, error) {
	contract, err := bindZKFaultDisputeGame(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGame{ZKFaultDisputeGameCaller: ZKFaultDisputeGameCaller{contract: contract}, ZKFaultDisputeGameTransactor: ZKFaultDisputeGameTransactor{contract: contract}, ZKFaultDisputeGameFilterer: ZKFaultDisputeGameFilterer{contract: contract}}, nil
}

// NewZKFaultDisputeGameCaller creates a new read-only instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGameCaller(address common.Address, caller bind.ContractCaller) (*ZKFaultDisputeGameCaller, error) {
	contract, err := bindZKFaultDisputeGame(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameCaller{contract: contract}, nil
}

// NewZKFaultDisputeGameTransactor creates a new write-only instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGameTransactor(address common.Address, transactor bind.ContractTransactor) (*ZKFaultDisputeGameTransactor, error) {
	contract, err := bindZKFaultDisputeGame(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameTransactor{contract: contract}, nil
}

// NewZKFaultDisputeGameFilterer creates a new log filterer instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGameFilterer(address common.Address, filterer bind.ContractFilterer) (*ZKFaultDisputeGameFilterer, error) {
	contract, err := bindZKFaultDisputeGame(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameFilterer{contract: contract}, nil
}

// bindZKFaultDisputeGame binds a generic wrapper to an already deployed contract.
func bindZKFaultDisputeGame(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ZKFaultDisputeGameMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ZKFaultDisputeGame.Contract.ZKFaultDisputeGameCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ZKFaultDisputeGameTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ZKFaultDisputeGameTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ZKFaultDisputeGame.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.contract.Transact(opts, method, params...)
}

// BURNADDRESS is a free data retrieval call binding the contract method 0xfccc2813.
//
// Solidity: function BURN_ADDRESS() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) BURNADDRESS(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "BURN_ADDRESS")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BURNADDRESS is a free data retrieval call binding the contract method 0xfccc2813.
//
// Solidity: function BURN_ADDRESS() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) BURNADDRESS() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.BURNADDRESS(&_ZKFaultDisputeGame.CallOpts)
}

// BURNADDRESS is a free data retrieval call binding the contract method 0xfccc2813.
//
// Solidity: function BURN_ADDRESS() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) BURNADDRESS() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.BURNADDRESS(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERBOND is a free data retrieval call binding the contract method 0xbb825afc.
//
// Solidity: function CHALLENGER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) CHALLENGERBOND(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "CHALLENGER_BOND")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHALLENGERBOND is a free data retrieval call binding the contract method 0xbb825afc.
//
// Solidity: function CHALLENGER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) CHALLENGERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERBOND is a free data retrieval call binding the contract method 0xbb825afc.
//
// Solidity: function CHALLENGER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) CHALLENGERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0x853b7f3f.
//
// Solidity: function CHALLENGER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) CHALLENGERREWARDPERCENTAGE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "CHALLENGER_REWARD_PERCENTAGE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHALLENGERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0x853b7f3f.
//
// Solidity: function CHALLENGER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) CHALLENGERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0x853b7f3f.
//
// Solidity: function CHALLENGER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) CHALLENGERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// PERCENTAGEDIVISOR is a free data retrieval call binding the contract method 0xcaf29765.
//
// Solidity: function PERCENTAGE_DIVISOR() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) PERCENTAGEDIVISOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "PERCENTAGE_DIVISOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PERCENTAGEDIVISOR is a free data retrieval call binding the contract method 0xcaf29765.
//
// Solidity: function PERCENTAGE_DIVISOR() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) PERCENTAGEDIVISOR() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PERCENTAGEDIVISOR(&_ZKFaultDisputeGame.CallOpts)
}

// PERCENTAGEDIVISOR is a free data retrieval call binding the contract method 0xcaf29765.
//
// Solidity: function PERCENTAGE_DIVISOR() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) PERCENTAGEDIVISOR() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PERCENTAGEDIVISOR(&_ZKFaultDisputeGame.CallOpts)
}

// PROPOSERBOND is a free data retrieval call binding the contract method 0x1ef7a1f7.
//
// Solidity: function PROPOSER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) PROPOSERBOND(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "PROPOSER_BOND")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PROPOSERBOND is a free data retrieval call binding the contract method 0x1ef7a1f7.
//
// Solidity: function PROPOSER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) PROPOSERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROPOSERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// PROPOSERBOND is a free data retrieval call binding the contract method 0x1ef7a1f7.
//
// Solidity: function PROPOSER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) PROPOSERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROPOSERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// PROVERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0xd60d026d.
//
// Solidity: function PROVER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) PROVERREWARDPERCENTAGE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "PROVER_REWARD_PERCENTAGE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PROVERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0xd60d026d.
//
// Solidity: function PROVER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) PROVERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROVERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// PROVERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0xd60d026d.
//
// Solidity: function PROVER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) PROVERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROVERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// AnchorStateRegistry is a free data retrieval call binding the contract method 0x5c0cba33.
//
// Solidity: function anchorStateRegistry() view returns(address registry_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) AnchorStateRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "anchorStateRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AnchorStateRegistry is a free data retrieval call binding the contract method 0x5c0cba33.
//
// Solidity: function anchorStateRegistry() view returns(address registry_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) AnchorStateRegistry() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.AnchorStateRegistry(&_ZKFaultDisputeGame.CallOpts)
}

// AnchorStateRegistry is a free data retrieval call binding the contract method 0x5c0cba33.
//
// Solidity: function anchorStateRegistry() view returns(address registry_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) AnchorStateRegistry() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.AnchorStateRegistry(&_ZKFaultDisputeGame.CallOpts)
}

// ChallengedClaimIndexes is a free data retrieval call binding the contract method 0x7720772d.
//
// Solidity: function challengedClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaimIndexes(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaimIndexes", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ChallengedClaimIndexes is a free data retrieval call binding the contract method 0x7720772d.
//
// Solidity: function challengedClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimIndexes is a free data retrieval call binding the contract method 0x7720772d.
//
// Solidity: function challengedClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaims is a free data retrieval call binding the contract method 0xcd4fb3fc.
//
// Solidity: function challengedClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaims(opts *bind.CallOpts, arg0 *big.Int) (bool, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaims", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ChallengedClaims is a free data retrieval call binding the contract method 0xcd4fb3fc.
//
// Solidity: function challengedClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaims is a free data retrieval call binding the contract method 0xcd4fb3fc.
//
// Solidity: function challengedClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimsTimestamp is a free data retrieval call binding the contract method 0xedcf913b.
//
// Solidity: function challengedClaimsTimestamp(uint256 ) view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaimsTimestamp(opts *bind.CallOpts, arg0 *big.Int) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaimsTimestamp", arg0)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ChallengedClaimsTimestamp is a free data retrieval call binding the contract method 0xedcf913b.
//
// Solidity: function challengedClaimsTimestamp(uint256 ) view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaimsTimestamp(arg0 *big.Int) (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimsTimestamp(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimsTimestamp is a free data retrieval call binding the contract method 0xedcf913b.
//
// Solidity: function challengedClaimsTimestamp(uint256 ) view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaimsTimestamp(arg0 *big.Int) (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimsTimestamp(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Challengers is a free data retrieval call binding the contract method 0x6b45ebcb.
//
// Solidity: function challengers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Challengers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Challengers is a free data retrieval call binding the contract method 0x6b45ebcb.
//
// Solidity: function challengers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Challengers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Challengers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Challengers is a free data retrieval call binding the contract method 0x6b45ebcb.
//
// Solidity: function challengers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Challengers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Challengers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ClaimsHash is a free data retrieval call binding the contract method 0xf1126de1.
//
// Solidity: function claimsHash() pure returns(bytes32 claimsHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ClaimsHash(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "claimsHash")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ClaimsHash is a free data retrieval call binding the contract method 0xf1126de1.
//
// Solidity: function claimsHash() pure returns(bytes32 claimsHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ClaimsHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsHash(&_ZKFaultDisputeGame.CallOpts)
}

// ClaimsHash is a free data retrieval call binding the contract method 0xf1126de1.
//
// Solidity: function claimsHash() pure returns(bytes32 claimsHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ClaimsHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsHash(&_ZKFaultDisputeGame.CallOpts)
}

// ClaimsLength is a free data retrieval call binding the contract method 0xaa23fddc.
//
// Solidity: function claimsLength() pure returns(uint256 claimsLength_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ClaimsLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "claimsLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ClaimsLength is a free data retrieval call binding the contract method 0xaa23fddc.
//
// Solidity: function claimsLength() pure returns(uint256 claimsLength_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ClaimsLength() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsLength(&_ZKFaultDisputeGame.CallOpts)
}

// ClaimsLength is a free data retrieval call binding the contract method 0xaa23fddc.
//
// Solidity: function claimsLength() pure returns(uint256 claimsLength_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ClaimsLength() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsLength(&_ZKFaultDisputeGame.CallOpts)
}

// Config is a free data retrieval call binding the contract method 0x79502c55.
//
// Solidity: function config() view returns(address config_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Config(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "config")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Config is a free data retrieval call binding the contract method 0x79502c55.
//
// Solidity: function config() view returns(address config_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Config() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Config(&_ZKFaultDisputeGame.CallOpts)
}

// Config is a free data retrieval call binding the contract method 0x79502c55.
//
// Solidity: function config() view returns(address config_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Config() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Config(&_ZKFaultDisputeGame.CallOpts)
}

// CreatedAt is a free data retrieval call binding the contract method 0xcf09e0d0.
//
// Solidity: function createdAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) CreatedAt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "createdAt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// CreatedAt is a free data retrieval call binding the contract method 0xcf09e0d0.
//
// Solidity: function createdAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) CreatedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.CreatedAt(&_ZKFaultDisputeGame.CallOpts)
}

// CreatedAt is a free data retrieval call binding the contract method 0xcf09e0d0.
//
// Solidity: function createdAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) CreatedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.CreatedAt(&_ZKFaultDisputeGame.CallOpts)
}

// ExtraData is a free data retrieval call binding the contract method 0x609d3334.
//
// Solidity: function extraData() pure returns(bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ExtraData(opts *bind.CallOpts) ([]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "extraData")

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// ExtraData is a free data retrieval call binding the contract method 0x609d3334.
//
// Solidity: function extraData() pure returns(bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ExtraData() ([]byte, error) {
	return _ZKFaultDisputeGame.Contract.ExtraData(&_ZKFaultDisputeGame.CallOpts)
}

// ExtraData is a free data retrieval call binding the contract method 0x609d3334.
//
// Solidity: function extraData() pure returns(bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ExtraData() ([]byte, error) {
	return _ZKFaultDisputeGame.Contract.ExtraData(&_ZKFaultDisputeGame.CallOpts)
}

// FaultProofProver is a free data retrieval call binding the contract method 0x35a66eba.
//
// Solidity: function faultProofProver() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) FaultProofProver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "faultProofProver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FaultProofProver is a free data retrieval call binding the contract method 0x35a66eba.
//
// Solidity: function faultProofProver() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) FaultProofProver() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.FaultProofProver(&_ZKFaultDisputeGame.CallOpts)
}

// FaultProofProver is a free data retrieval call binding the contract method 0x35a66eba.
//
// Solidity: function faultProofProver() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) FaultProofProver() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.FaultProofProver(&_ZKFaultDisputeGame.CallOpts)
}

// GameCreator is a free data retrieval call binding the contract method 0x37b1b229.
//
// Solidity: function gameCreator() pure returns(address creator_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameCreator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameCreator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GameCreator is a free data retrieval call binding the contract method 0x37b1b229.
//
// Solidity: function gameCreator() pure returns(address creator_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameCreator() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameCreator(&_ZKFaultDisputeGame.CallOpts)
}

// GameCreator is a free data retrieval call binding the contract method 0x37b1b229.
//
// Solidity: function gameCreator() pure returns(address creator_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameCreator() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameCreator(&_ZKFaultDisputeGame.CallOpts)
}

// GameData is a free data retrieval call binding the contract method 0xfa24f743.
//
// Solidity: function gameData() view returns(uint32 gameType_, bytes32 rootClaim_, bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameData(opts *bind.CallOpts) (struct {
	GameType  uint32
	RootClaim [32]byte
	ExtraData []byte
}, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameData")

	outstruct := new(struct {
		GameType  uint32
		RootClaim [32]byte
		ExtraData []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.GameType = *abi.ConvertType(out[0], new(uint32)).(*uint32)
	outstruct.RootClaim = *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)
	outstruct.ExtraData = *abi.ConvertType(out[2], new([]byte)).(*[]byte)

	return *outstruct, err

}

// GameData is a free data retrieval call binding the contract method 0xfa24f743.
//
// Solidity: function gameData() view returns(uint32 gameType_, bytes32 rootClaim_, bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameData() (struct {
	GameType  uint32
	RootClaim [32]byte
	ExtraData []byte
}, error) {
	return _ZKFaultDisputeGame.Contract.GameData(&_ZKFaultDisputeGame.CallOpts)
}

// GameData is a free data retrieval call binding the contract method 0xfa24f743.
//
// Solidity: function gameData() view returns(uint32 gameType_, bytes32 rootClaim_, bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameData() (struct {
	GameType  uint32
	RootClaim [32]byte
	ExtraData []byte
}, error) {
	return _ZKFaultDisputeGame.Contract.GameData(&_ZKFaultDisputeGame.CallOpts)
}

// GameType is a free data retrieval call binding the contract method 0xbbdc02db.
//
// Solidity: function gameType() view returns(uint32 gameType_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameType(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameType")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GameType is a free data retrieval call binding the contract method 0xbbdc02db.
//
// Solidity: function gameType() view returns(uint32 gameType_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameType() (uint32, error) {
	return _ZKFaultDisputeGame.Contract.GameType(&_ZKFaultDisputeGame.CallOpts)
}

// GameType is a free data retrieval call binding the contract method 0xbbdc02db.
//
// Solidity: function gameType() view returns(uint32 gameType_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameType() (uint32, error) {
	return _ZKFaultDisputeGame.Contract.GameType(&_ZKFaultDisputeGame.CallOpts)
}

// GameWinner is a free data retrieval call binding the contract method 0xc94f598b.
//
// Solidity: function gameWinner() view returns(address gameWinner_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameWinner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameWinner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GameWinner is a free data retrieval call binding the contract method 0xc94f598b.
//
// Solidity: function gameWinner() view returns(address gameWinner_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameWinner() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameWinner(&_ZKFaultDisputeGame.CallOpts)
}

// GameWinner is a free data retrieval call binding the contract method 0xc94f598b.
//
// Solidity: function gameWinner() view returns(address gameWinner_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameWinner() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameWinner(&_ZKFaultDisputeGame.CallOpts)
}

// InvalidChallengeClaimIndexes is a free data retrieval call binding the contract method 0xdb8cb962.
//
// Solidity: function invalidChallengeClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) InvalidChallengeClaimIndexes(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "invalidChallengeClaimIndexes", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// InvalidChallengeClaimIndexes is a free data retrieval call binding the contract method 0xdb8cb962.
//
// Solidity: function invalidChallengeClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) InvalidChallengeClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// InvalidChallengeClaimIndexes is a free data retrieval call binding the contract method 0xdb8cb962.
//
// Solidity: function invalidChallengeClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) InvalidChallengeClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// InvalidChallengeClaims is a free data retrieval call binding the contract method 0xc6f647b8.
//
// Solidity: function invalidChallengeClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) InvalidChallengeClaims(opts *bind.CallOpts, arg0 *big.Int) (bool, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "invalidChallengeClaims", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// InvalidChallengeClaims is a free data retrieval call binding the contract method 0xc6f647b8.
//
// Solidity: function invalidChallengeClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) InvalidChallengeClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// InvalidChallengeClaims is a free data retrieval call binding the contract method 0xc6f647b8.
//
// Solidity: function invalidChallengeClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) InvalidChallengeClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// IsChallengeSuccess is a free data retrieval call binding the contract method 0xe5d5f2e7.
//
// Solidity: function isChallengeSuccess() view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) IsChallengeSuccess(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "isChallengeSuccess")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsChallengeSuccess is a free data retrieval call binding the contract method 0xe5d5f2e7.
//
// Solidity: function isChallengeSuccess() view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) IsChallengeSuccess() (bool, error) {
	return _ZKFaultDisputeGame.Contract.IsChallengeSuccess(&_ZKFaultDisputeGame.CallOpts)
}

// IsChallengeSuccess is a free data retrieval call binding the contract method 0xe5d5f2e7.
//
// Solidity: function isChallengeSuccess() view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) IsChallengeSuccess() (bool, error) {
	return _ZKFaultDisputeGame.Contract.IsChallengeSuccess(&_ZKFaultDisputeGame.CallOpts)
}

// L1Head is a free data retrieval call binding the contract method 0x6361506d.
//
// Solidity: function l1Head() pure returns(bytes32 l1Head_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) L1Head(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "l1Head")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// L1Head is a free data retrieval call binding the contract method 0x6361506d.
//
// Solidity: function l1Head() pure returns(bytes32 l1Head_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) L1Head() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.L1Head(&_ZKFaultDisputeGame.CallOpts)
}

// L1Head is a free data retrieval call binding the contract method 0x6361506d.
//
// Solidity: function l1Head() pure returns(bytes32 l1Head_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) L1Head() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.L1Head(&_ZKFaultDisputeGame.CallOpts)
}

// L2BlockNumber is a free data retrieval call binding the contract method 0x8b85902b.
//
// Solidity: function l2BlockNumber() pure returns(uint256 l2BlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) L2BlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "l2BlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// L2BlockNumber is a free data retrieval call binding the contract method 0x8b85902b.
//
// Solidity: function l2BlockNumber() pure returns(uint256 l2BlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) L2BlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2BlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// L2BlockNumber is a free data retrieval call binding the contract method 0x8b85902b.
//
// Solidity: function l2BlockNumber() pure returns(uint256 l2BlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) L2BlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2BlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// L2ChainId is a free data retrieval call binding the contract method 0xd6ae3cd5.
//
// Solidity: function l2ChainId() view returns(uint256 l2ChainId_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) L2ChainId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "l2ChainId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// L2ChainId is a free data retrieval call binding the contract method 0xd6ae3cd5.
//
// Solidity: function l2ChainId() view returns(uint256 l2ChainId_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) L2ChainId() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2ChainId(&_ZKFaultDisputeGame.CallOpts)
}

// L2ChainId is a free data retrieval call binding the contract method 0xd6ae3cd5.
//
// Solidity: function l2ChainId() view returns(uint256 l2ChainId_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) L2ChainId() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2ChainId(&_ZKFaultDisputeGame.CallOpts)
}

// MaxClockDuration is a free data retrieval call binding the contract method 0xdabd396d.
//
// Solidity: function maxClockDuration() view returns(uint64 maxClockDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) MaxClockDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "maxClockDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MaxClockDuration is a free data retrieval call binding the contract method 0xdabd396d.
//
// Solidity: function maxClockDuration() view returns(uint64 maxClockDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) MaxClockDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxClockDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxClockDuration is a free data retrieval call binding the contract method 0xdabd396d.
//
// Solidity: function maxClockDuration() view returns(uint64 maxClockDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) MaxClockDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxClockDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxDetectFaultDuration is a free data retrieval call binding the contract method 0x57335705.
//
// Solidity: function maxDetectFaultDuration() view returns(uint64 maxDetectFaultDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) MaxDetectFaultDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "maxDetectFaultDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MaxDetectFaultDuration is a free data retrieval call binding the contract method 0x57335705.
//
// Solidity: function maxDetectFaultDuration() view returns(uint64 maxDetectFaultDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) MaxDetectFaultDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxDetectFaultDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxDetectFaultDuration is a free data retrieval call binding the contract method 0x57335705.
//
// Solidity: function maxDetectFaultDuration() view returns(uint64 maxDetectFaultDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) MaxDetectFaultDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxDetectFaultDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxGenerateProofDuration is a free data retrieval call binding the contract method 0x5ba42ed4.
//
// Solidity: function maxGenerateProofDuration() view returns(uint64 maxGenerateProofDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) MaxGenerateProofDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "maxGenerateProofDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MaxGenerateProofDuration is a free data retrieval call binding the contract method 0x5ba42ed4.
//
// Solidity: function maxGenerateProofDuration() view returns(uint64 maxGenerateProofDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) MaxGenerateProofDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxGenerateProofDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxGenerateProofDuration is a free data retrieval call binding the contract method 0x5ba42ed4.
//
// Solidity: function maxGenerateProofDuration() view returns(uint64 maxGenerateProofDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) MaxGenerateProofDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxGenerateProofDuration(&_ZKFaultDisputeGame.CallOpts)
}

// ParentGameProxy is a free data retrieval call binding the contract method 0x864cbb35.
//
// Solidity: function parentGameProxy() pure returns(address parentGameProxy_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ParentGameProxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "parentGameProxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ParentGameProxy is a free data retrieval call binding the contract method 0x864cbb35.
//
// Solidity: function parentGameProxy() pure returns(address parentGameProxy_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ParentGameProxy() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ParentGameProxy(&_ZKFaultDisputeGame.CallOpts)
}

// ParentGameProxy is a free data retrieval call binding the contract method 0x864cbb35.
//
// Solidity: function parentGameProxy() pure returns(address parentGameProxy_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ParentGameProxy() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ParentGameProxy(&_ZKFaultDisputeGame.CallOpts)
}

// ResolvedAt is a free data retrieval call binding the contract method 0x19effeb4.
//
// Solidity: function resolvedAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ResolvedAt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "resolvedAt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ResolvedAt is a free data retrieval call binding the contract method 0x19effeb4.
//
// Solidity: function resolvedAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ResolvedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ResolvedAt(&_ZKFaultDisputeGame.CallOpts)
}

// ResolvedAt is a free data retrieval call binding the contract method 0x19effeb4.
//
// Solidity: function resolvedAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ResolvedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ResolvedAt(&_ZKFaultDisputeGame.CallOpts)
}

// RootClaim is a free data retrieval call binding the contract method 0xbcef3b55.
//
// Solidity: function rootClaim() pure returns(bytes32 rootClaim_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) RootClaim(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "rootClaim")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// RootClaim is a free data retrieval call binding the contract method 0xbcef3b55.
//
// Solidity: function rootClaim() pure returns(bytes32 rootClaim_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) RootClaim() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.RootClaim(&_ZKFaultDisputeGame.CallOpts)
}

// RootClaim is a free data retrieval call binding the contract method 0xbcef3b55.
//
// Solidity: function rootClaim() pure returns(bytes32 rootClaim_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) RootClaim() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.RootClaim(&_ZKFaultDisputeGame.CallOpts)
}

// StartingBlockNumber is a free data retrieval call binding the contract method 0x70872aa5.
//
// Solidity: function startingBlockNumber() view returns(uint256 startingBlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) StartingBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "startingBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StartingBlockNumber is a free data retrieval call binding the contract method 0x70872aa5.
//
// Solidity: function startingBlockNumber() view returns(uint256 startingBlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) StartingBlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.StartingBlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// StartingBlockNumber is a free data retrieval call binding the contract method 0x70872aa5.
//
// Solidity: function startingBlockNumber() view returns(uint256 startingBlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) StartingBlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.StartingBlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// StartingOutputRoot is a free data retrieval call binding the contract method 0x57da950e.
//
// Solidity: function startingOutputRoot() view returns(bytes32 root, uint256 l2BlockNumber)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) StartingOutputRoot(opts *bind.CallOpts) (struct {
	Root          [32]byte
	L2BlockNumber *big.Int
}, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "startingOutputRoot")

	outstruct := new(struct {
		Root          [32]byte
		L2BlockNumber *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Root = *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	outstruct.L2BlockNumber = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// StartingOutputRoot is a free data retrieval call binding the contract method 0x57da950e.
//
// Solidity: function startingOutputRoot() view returns(bytes32 root, uint256 l2BlockNumber)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) StartingOutputRoot() (struct {
	Root          [32]byte
	L2BlockNumber *big.Int
}, error) {
	return _ZKFaultDisputeGame.Contract.StartingOutputRoot(&_ZKFaultDisputeGame.CallOpts)
}

// StartingOutputRoot is a free data retrieval call binding the contract method 0x57da950e.
//
// Solidity: function startingOutputRoot() view returns(bytes32 root, uint256 l2BlockNumber)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) StartingOutputRoot() (struct {
	Root          [32]byte
	L2BlockNumber *big.Int
}, error) {
	return _ZKFaultDisputeGame.Contract.StartingOutputRoot(&_ZKFaultDisputeGame.CallOpts)
}

// StartingRootHash is a free data retrieval call binding the contract method 0x25fc2ace.
//
// Solidity: function startingRootHash() view returns(bytes32 startingRootHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) StartingRootHash(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "startingRootHash")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// StartingRootHash is a free data retrieval call binding the contract method 0x25fc2ace.
//
// Solidity: function startingRootHash() view returns(bytes32 startingRootHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) StartingRootHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.StartingRootHash(&_ZKFaultDisputeGame.CallOpts)
}

// StartingRootHash is a free data retrieval call binding the contract method 0x25fc2ace.
//
// Solidity: function startingRootHash() view returns(bytes32 startingRootHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) StartingRootHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.StartingRootHash(&_ZKFaultDisputeGame.CallOpts)
}

// Status is a free data retrieval call binding the contract method 0x200d2ed2.
//
// Solidity: function status() view returns(uint8)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Status(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "status")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Status is a free data retrieval call binding the contract method 0x200d2ed2.
//
// Solidity: function status() view returns(uint8)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Status() (uint8, error) {
	return _ZKFaultDisputeGame.Contract.Status(&_ZKFaultDisputeGame.CallOpts)
}

// Status is a free data retrieval call binding the contract method 0x200d2ed2.
//
// Solidity: function status() view returns(uint8)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Status() (uint8, error) {
	return _ZKFaultDisputeGame.Contract.Status(&_ZKFaultDisputeGame.CallOpts)
}

// SuccessfulChallengeIndex is a free data retrieval call binding the contract method 0x1a27d158.
//
// Solidity: function successfulChallengeIndex() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) SuccessfulChallengeIndex(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "successfulChallengeIndex")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SuccessfulChallengeIndex is a free data retrieval call binding the contract method 0x1a27d158.
//
// Solidity: function successfulChallengeIndex() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) SuccessfulChallengeIndex() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.SuccessfulChallengeIndex(&_ZKFaultDisputeGame.CallOpts)
}

// SuccessfulChallengeIndex is a free data retrieval call binding the contract method 0x1a27d158.
//
// Solidity: function successfulChallengeIndex() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) SuccessfulChallengeIndex() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.SuccessfulChallengeIndex(&_ZKFaultDisputeGame.CallOpts)
}

// ValidityProofProvers is a free data retrieval call binding the contract method 0xc1eee53e.
//
// Solidity: function validityProofProvers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ValidityProofProvers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "validityProofProvers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ValidityProofProvers is a free data retrieval call binding the contract method 0xc1eee53e.
//
// Solidity: function validityProofProvers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ValidityProofProvers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ValidityProofProvers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ValidityProofProvers is a free data retrieval call binding the contract method 0xc1eee53e.
//
// Solidity: function validityProofProvers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ValidityProofProvers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ValidityProofProvers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Version() (string, error) {
	return _ZKFaultDisputeGame.Contract.Version(&_ZKFaultDisputeGame.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Version() (string, error) {
	return _ZKFaultDisputeGame.Contract.Version(&_ZKFaultDisputeGame.CallOpts)
}

// Weth is a free data retrieval call binding the contract method 0x3fc8cef3.
//
// Solidity: function weth() view returns(address weth_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Weth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "weth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Weth is a free data retrieval call binding the contract method 0x3fc8cef3.
//
// Solidity: function weth() view returns(address weth_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Weth() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Weth(&_ZKFaultDisputeGame.CallOpts)
}

// Weth is a free data retrieval call binding the contract method 0x3fc8cef3.
//
// Solidity: function weth() view returns(address weth_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Weth() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Weth(&_ZKFaultDisputeGame.CallOpts)
}

// ChallengeByProof is a paid mutator transaction binding the contract method 0x8e0386ba.
//
// Solidity: function challengeByProof(uint256 _disputeClaimIndex, bytes32 _expectedClaim, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ChallengeByProof(opts *bind.TransactOpts, _disputeClaimIndex *big.Int, _expectedClaim [32]byte, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "challengeByProof", _disputeClaimIndex, _expectedClaim, _originalClaims, _proof)
}

// ChallengeByProof is a paid mutator transaction binding the contract method 0x8e0386ba.
//
// Solidity: function challengeByProof(uint256 _disputeClaimIndex, bytes32 _expectedClaim, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengeByProof(_disputeClaimIndex *big.Int, _expectedClaim [32]byte, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeByProof(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _expectedClaim, _originalClaims, _proof)
}

// ChallengeByProof is a paid mutator transaction binding the contract method 0x8e0386ba.
//
// Solidity: function challengeByProof(uint256 _disputeClaimIndex, bytes32 _expectedClaim, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ChallengeByProof(_disputeClaimIndex *big.Int, _expectedClaim [32]byte, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeByProof(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _expectedClaim, _originalClaims, _proof)
}

// ChallengeBySignal is a paid mutator transaction binding the contract method 0x9ba51b73.
//
// Solidity: function challengeBySignal(uint256 _disputeClaimIndex) payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ChallengeBySignal(opts *bind.TransactOpts, _disputeClaimIndex *big.Int) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "challengeBySignal", _disputeClaimIndex)
}

// ChallengeBySignal is a paid mutator transaction binding the contract method 0x9ba51b73.
//
// Solidity: function challengeBySignal(uint256 _disputeClaimIndex) payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengeBySignal(_disputeClaimIndex *big.Int) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeBySignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex)
}

// ChallengeBySignal is a paid mutator transaction binding the contract method 0x9ba51b73.
//
// Solidity: function challengeBySignal(uint256 _disputeClaimIndex) payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ChallengeBySignal(_disputeClaimIndex *big.Int) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeBySignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Initialize() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Initialize(&_ZKFaultDisputeGame.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) Initialize() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Initialize(&_ZKFaultDisputeGame.TransactOpts)
}

// Resolve is a paid mutator transaction binding the contract method 0x2810e1d6.
//
// Solidity: function resolve() returns(uint8 status_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) Resolve(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "resolve")
}

// Resolve is a paid mutator transaction binding the contract method 0x2810e1d6.
//
// Solidity: function resolve() returns(uint8 status_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Resolve() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Resolve(&_ZKFaultDisputeGame.TransactOpts)
}

// Resolve is a paid mutator transaction binding the contract method 0x2810e1d6.
//
// Solidity: function resolve() returns(uint8 status_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) Resolve() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Resolve(&_ZKFaultDisputeGame.TransactOpts)
}

// ResolveClaim is a paid mutator transaction binding the contract method 0x4bf8f327.
//
// Solidity: function resolveClaim() returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ResolveClaim(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "resolveClaim")
}

// ResolveClaim is a paid mutator transaction binding the contract method 0x4bf8f327.
//
// Solidity: function resolveClaim() returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ResolveClaim() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ResolveClaim(&_ZKFaultDisputeGame.TransactOpts)
}

// ResolveClaim is a paid mutator transaction binding the contract method 0x4bf8f327.
//
// Solidity: function resolveClaim() returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ResolveClaim() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ResolveClaim(&_ZKFaultDisputeGame.TransactOpts)
}

// SubmitProofForSignal is a paid mutator transaction binding the contract method 0x1ad7e0e2.
//
// Solidity: function submitProofForSignal(uint256 _disputeClaimIndex, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) SubmitProofForSignal(opts *bind.TransactOpts, _disputeClaimIndex *big.Int, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "submitProofForSignal", _disputeClaimIndex, _originalClaims, _proof)
}

// SubmitProofForSignal is a paid mutator transaction binding the contract method 0x1ad7e0e2.
//
// Solidity: function submitProofForSignal(uint256 _disputeClaimIndex, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) SubmitProofForSignal(_disputeClaimIndex *big.Int, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.SubmitProofForSignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _originalClaims, _proof)
}

// SubmitProofForSignal is a paid mutator transaction binding the contract method 0x1ad7e0e2.
//
// Solidity: function submitProofForSignal(uint256 _disputeClaimIndex, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) SubmitProofForSignal(_disputeClaimIndex *big.Int, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.SubmitProofForSignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _originalClaims, _proof)
}

// ZKFaultDisputeGameResolvedIterator is returned from FilterResolved and is used to iterate over the raw logs and unpacked data for Resolved events raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameResolvedIterator struct {
	Event *ZKFaultDisputeGameResolved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZKFaultDisputeGameResolvedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZKFaultDisputeGameResolved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZKFaultDisputeGameResolved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZKFaultDisputeGameResolvedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZKFaultDisputeGameResolvedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZKFaultDisputeGameResolved represents a Resolved event raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameResolved struct {
	Status uint8
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterResolved is a free log retrieval operation binding the contract event 0x5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60.
//
// Solidity: event Resolved(uint8 indexed status)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) FilterResolved(opts *bind.FilterOpts, status []uint8) (*ZKFaultDisputeGameResolvedIterator, error) {

	var statusRule []interface{}
	for _, statusItem := range status {
		statusRule = append(statusRule, statusItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.FilterLogs(opts, "Resolved", statusRule)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameResolvedIterator{contract: _ZKFaultDisputeGame.contract, event: "Resolved", logs: logs, sub: sub}, nil
}

// WatchResolved is a free log subscription operation binding the contract event 0x5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60.
//
// Solidity: event Resolved(uint8 indexed status)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) WatchResolved(opts *bind.WatchOpts, sink chan<- *ZKFaultDisputeGameResolved, status []uint8) (event.Subscription, error) {

	var statusRule []interface{}
	for _, statusItem := range status {
		statusRule = append(statusRule, statusItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.WatchLogs(opts, "Resolved", statusRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZKFaultDisputeGameResolved)
				if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "Resolved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseResolved is a log parse operation binding the contract event 0x5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60.
//
// Solidity: event Resolved(uint8 indexed status)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) ParseResolved(log types.Log) (*ZKFaultDisputeGameResolved, error) {
	event := new(ZKFaultDisputeGameResolved)
	if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "Resolved", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
