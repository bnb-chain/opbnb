// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ZKFaultDisputeGameMetaData contains all meta data concerning the ZKFaultDisputeGame contract.
var ZKFaultDisputeGameMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_gameType\",\"type\":\"uint32\",\"internalType\":\"GameType\"},{\"name\":\"_maxGenerateProofDuration\",\"type\":\"uint64\",\"internalType\":\"Duration\"},{\"name\":\"_maxDetectFaultDuration\",\"type\":\"uint64\",\"internalType\":\"Duration\"},{\"name\":\"_PROPOSER_BOND\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_CHALLENGER_BOND\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_FEE_VAULT_ADDRESS\",\"type\":\"address\",\"internalType\":\"addresspayable\"},{\"name\":\"_CHALLENGER_REWARD_PERCENTAGE\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_PROVER_REWARD_PERCENTAGE\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_weth\",\"type\":\"address\",\"internalType\":\"contractIDelayedWETH\"},{\"name\":\"_anchorStateRegistry\",\"type\":\"address\",\"internalType\":\"contractIAnchorStateRegistry\"},{\"name\":\"_config\",\"type\":\"address\",\"internalType\":\"contractZkFaultProofConfig\"},{\"name\":\"_l2ChainId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"CHALLENGER_BOND\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CHALLENGER_REWARD_PERCENTAGE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"FEE_VAULT_ADDRESS\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PERCENTAGE_DIVISOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PROPOSER_BOND\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PROVER_REWARD_PERCENTAGE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"anchorStateRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"registry_\",\"type\":\"address\",\"internalType\":\"contractIAnchorStateRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengeByProof\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_expectedClaim\",\"type\":\"bytes32\",\"internalType\":\"Claim\"},{\"name\":\"_originalClaims\",\"type\":\"bytes32[]\",\"internalType\":\"Claim[]\"},{\"name\":\"_proof\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"challengeBySignal\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"challengedClaimIndexes\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengedClaimIndexesLen\",\"inputs\":[],\"outputs\":[{\"name\":\"len_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengedClaims\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengedClaimsTimestamp\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"challengers\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"claimCredit\",\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"claimsHash\",\"inputs\":[],\"outputs\":[{\"name\":\"claimsHash_\",\"type\":\"bytes32\",\"internalType\":\"Hash\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"claimsLength\",\"inputs\":[],\"outputs\":[{\"name\":\"claimsLength_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"config\",\"inputs\":[],\"outputs\":[{\"name\":\"config_\",\"type\":\"address\",\"internalType\":\"contractZkFaultProofConfig\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"createdAt\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"Timestamp\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"credit\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"extraData\",\"inputs\":[],\"outputs\":[{\"name\":\"extraData_\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"faultProofProver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"gameCreator\",\"inputs\":[],\"outputs\":[{\"name\":\"creator_\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"gameData\",\"inputs\":[],\"outputs\":[{\"name\":\"gameType_\",\"type\":\"uint32\",\"internalType\":\"GameType\"},{\"name\":\"rootClaim_\",\"type\":\"bytes32\",\"internalType\":\"Claim\"},{\"name\":\"extraData_\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"gameType\",\"inputs\":[],\"outputs\":[{\"name\":\"gameType_\",\"type\":\"uint32\",\"internalType\":\"GameType\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"gameWinner\",\"inputs\":[],\"outputs\":[{\"name\":\"gameWinner_\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"invalidChallengeClaimIndexes\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"invalidChallengeClaims\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isChallengeSuccess\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"l1Head\",\"inputs\":[],\"outputs\":[{\"name\":\"l1Head_\",\"type\":\"bytes32\",\"internalType\":\"Hash\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"l2BlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"l2BlockNumber_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"l2ChainId\",\"inputs\":[],\"outputs\":[{\"name\":\"l2ChainId_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxClockDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"maxClockDuration_\",\"type\":\"uint64\",\"internalType\":\"Duration\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxDetectFaultDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"maxDetectFaultDuration_\",\"type\":\"uint64\",\"internalType\":\"Duration\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxGenerateProofDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"maxGenerateProofDuration_\",\"type\":\"uint64\",\"internalType\":\"Duration\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"parentGameProxy\",\"inputs\":[],\"outputs\":[{\"name\":\"parentGameProxy_\",\"type\":\"address\",\"internalType\":\"contractIZkFaultDisputeGame\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"resolve\",\"inputs\":[],\"outputs\":[{\"name\":\"status_\",\"type\":\"uint8\",\"internalType\":\"enumGameStatus\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"resolveClaim\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"resolvedAt\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"Timestamp\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"rootClaim\",\"inputs\":[],\"outputs\":[{\"name\":\"rootClaim_\",\"type\":\"bytes32\",\"internalType\":\"Claim\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"startingBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"startingBlockNumber_\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"startingOutputRoot\",\"inputs\":[],\"outputs\":[{\"name\":\"root\",\"type\":\"bytes32\",\"internalType\":\"Hash\"},{\"name\":\"l2BlockNumber\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"startingRootHash\",\"inputs\":[],\"outputs\":[{\"name\":\"startingRootHash_\",\"type\":\"bytes32\",\"internalType\":\"Hash\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"status\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"enumGameStatus\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"submitProofForSignal\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_originalClaims\",\"type\":\"bytes32[]\",\"internalType\":\"Claim[]\"},{\"name\":\"_proof\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"successfulChallengeIndex\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"validityProofProvers\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"weth\",\"inputs\":[],\"outputs\":[{\"name\":\"weth_\",\"type\":\"address\",\"internalType\":\"contractIDelayedWETH\"}],\"stateMutability\":\"view\"},{\"type\":\"event\",\"name\":\"ChallengeBySignalCreated\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Resolved\",\"inputs\":[{\"name\":\"status\",\"type\":\"uint8\",\"indexed\":true,\"internalType\":\"enumGameStatus\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"SubmitProofForSignalCreated\",\"inputs\":[{\"name\":\"_disputeClaimIndex\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"AlreadyInitialized\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"AnchorRootNotFound\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"BondTransferFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ChallengeAlreadyInvalid\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClaimAlreadyChallenged\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClaimNotChallenged\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClockNotExpired\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ClockTimeExceeded\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"GameChallengeSucceeded\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"GameNotInProgress\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"IncorrectBondAmount\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidClaimsLength\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidDisputeClaimIndex\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidExpectedClaim\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidGameStatus\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidOriginClaims\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidRewardPercentage\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NoCreditToClaim\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NoExpiredChallenges\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ParentGameIsInvalid\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ParentGameNotResolved\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"UnexpectedRootClaim\",\"inputs\":[{\"name\":\"rootClaim\",\"type\":\"bytes32\",\"internalType\":\"Claim\"}]},{\"type\":\"error\",\"name\":\"UnresolvedChallenges\",\"inputs\":[]}]",
	Bin: "0x6102206040523480156200001257600080fd5b50604051620040b2380380620040b2833981016040819052620000359162000169565b63ffffffff8c1660e0526001600160401b03808c1660a0528a1660c0526101808990526101a08890526001600160a01b0387166101c0526101e086905261020085905261271062000087868862000251565b1115620000a757604051632b72818d60e01b815260040160405180910390fd5b620000c860c0516001600160401b03166200013160201b62000ea31760201c565b620000e960a0516001600160401b03166200013160201b62000ea31760201c565b620000f591906200026c565b6001600160401b03166080526001600160a01b0393841661010052918316610120529091166101405261016052506200029a9650505050505050565b90565b80516001600160401b03811681146200014c57600080fd5b919050565b80516001600160a01b03811681146200014c57600080fd5b6000806000806000806000806000806000806101808d8f0312156200018d57600080fd5b8c5163ffffffff81168114620001a257600080fd5b9b50620001b260208e0162000134565b9a50620001c260408e0162000134565b995060608d0151985060808d01519750620001e060a08e0162000151565b965060c08d0151955060e08d01519450620001ff6101008e0162000151565b9350620002106101208e0162000151565b9250620002216101408e0162000151565b91506101608d015190509295989b509295989b509295989b565b634e487b7160e01b600052601160045260246000fd5b600082198211156200026757620002676200023b565b500190565b60006001600160401b038281168482168083038211156200029157620002916200023b565b01949350505050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051613c786200043a60003960008181610ae201528181611a5e0152611af60152600081816107d401526119a00152600081816103400152611c79015260008181610901015281816119070152818161193001528181611b17015261302401526000818161043f01528181611bed0152611c16015260008181610b13015281816110a90152612c7801526000818161079601528181610f7c015281816110cf01528181611163015281816111f9015281816112a60152818161269d01528181612b6901528181612c9e01528181612d3201528181612dc80152612e7501526000818161067601528181611d8e015261239a015260008181610542015281816117d701528181612188015281816127e70152818161307d015261366101526000818161093a01528181612356015261344c0152600081816105e001526131c201526000818161064301528181610dd70152611f5b015260008181610b46015281816116b1015261293d0152613c786000f3fe6080604052600436106103295760003560e01c80638129fc1c116101a5578063c94f598b116100ec578063d6ae3cd511610095578063e5d5f2e71161006f578063e5d5f2e714610b8a578063edcf913b14610ba4578063f1126de114610bdb578063fa24f74314610c1b57600080fd5b8063d6ae3cd514610b04578063dabd396d14610b37578063db8cb96214610b6a57600080fd5b8063cf09e0d0116100c6578063cf09e0d014610a82578063d5d44d8014610aa3578063d60d026d14610ad057600080fd5b8063c94f598b14610a27578063caf2976514610a3c578063cd4fb3fc14610a5257600080fd5b8063aa23fddc1161014e578063bcef3b5511610128578063bcef3b5514610964578063c1eee53e146109a4578063c6f647b8146109e757600080fd5b8063aa23fddc146108ac578063bb825afc146108ef578063bbdc02db1461092357600080fd5b80638b85902b1161017f5780638b85902b146108395780638e0386ba146108795780639ba51b731461089957600080fd5b80638129fc1c146107ba578063853b7f3f146107c2578063864cbb35146107f657600080fd5b80634bf8f32711610274578063609d33341161021d5780636b45ebcb116101f75780636b45ebcb1461070f57806370872aa5146107525780637720772d1461076757806379502c551461078757600080fd5b8063609d33341461069a57806360e27464146106af5780636361506d146106cf57600080fd5b806357da950e1161024e57806357da950e146106045780635ba42ed4146106345780635c0cba331461066757600080fd5b80634bf8f3271461056657806354fd4d501461057b57806357335705146105d157600080fd5b8063200d2ed2116102d657806335a66eba116102b057806335a66eba146104c657806337b1b229146104f35780633fc8cef31461053357600080fd5b8063200d2ed21461046157806325fc2ace1461049c5780632810e1d6146104b157600080fd5b80631ad7e0e2116103075780631ad7e0e2146103f65780631b720f3f146104185780631ef7a1f71461042d57600080fd5b8063126db75e1461032e57806319effeb41461038c5780631a27d158146103d2575b600080fd5b34801561033a57600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561039857600080fd5b506000546103b99068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610383565b3480156103de57600080fd5b506103e8600b5481565b604051908152602001610383565b34801561040257600080fd5b506104166104113660046137a1565b610c3f565b005b34801561042457600080fd5b506003546103e8565b34801561043957600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561046d57600080fd5b5060005461048f90700100000000000000000000000000000000900460ff1681565b604051610383919061384a565b3480156104a857600080fd5b50600c546103e8565b3480156104bd57600080fd5b5061048f6114bc565b3480156104d257600080fd5b506006546103629073ffffffffffffffffffffffffffffffffffffffff1681565b3480156104ff57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560601c610362565b34801561053f57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610362565b34801561057257600080fd5b50610416611e16565b34801561058757600080fd5b506105c46040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161038391906138f6565b3480156105dd57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103b9565b34801561061057600080fd5b50600c54600d5461061f919082565b60408051928352602083019190915201610383565b34801561064057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103b9565b34801561067357600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610362565b3480156106a657600080fd5b506105c46120c9565b3480156106bb57600080fd5b506104166106ca366004613932565b6120d7565b3480156106db57600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003603401356103e8565b34801561071b57600080fd5b5061036261072a36600461394f565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561075e57600080fd5b50600d546103e8565b34801561077357600080fd5b506103e861078236600461394f565b612283565b34801561079357600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610362565b6104166122a4565b3480156107ce57600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561080257600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036098013560601c610362565b34801561084557600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003605401356103e8565b34801561088557600080fd5b50610416610894366004613968565b61287f565b6104166108a736600461394f565b613022565b3480156108b857600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036094013560e01c6103e8565b3480156108fb57600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561092f57600080fd5b5060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610383565b34801561097057600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003601401356103e8565b3480156109b057600080fd5b506103626109bf36600461394f565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156109f357600080fd5b50610a17610a0236600461394f565b60086020526000908152604090205460ff1681565b6040519015158152602001610383565b348015610a3357600080fd5b506103626133e3565b348015610a4857600080fd5b506103e861271081565b348015610a5e57600080fd5b50610a17610a6d36600461394f565b60026020526000908152604090205460ff1681565b348015610a8e57600080fd5b506000546103b99067ffffffffffffffff1681565b348015610aaf57600080fd5b506103e8610abe366004613932565b60016020526000908152604090205481565b348015610adc57600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b348015610b1057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103e8565b348015610b4357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103b9565b348015610b7657600080fd5b506103e8610b8536600461394f565b61343a565b348015610b9657600080fd5b50600a54610a179060ff1681565b348015610bb057600080fd5b506103b9610bbf36600461394f565b60046020526000908152604090205467ffffffffffffffff1681565b348015610be757600080fd5b50367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003607401356103e8565b348015610c2757600080fd5b50610c3061344a565b604051610383939291906139eb565b60008054700100000000000000000000000000000000900460ff166002811115610c6b57610c6b61381b565b14610ca2576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001610cac6134aa565b6002811115610cbd57610cbd61381b565b03610cf4576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5460ff1615610d31576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008581526002602052604090205460ff16610d79576040517fa0c6986900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008581526008602052604090205460ff1615610dc2576040517f40e2452900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085815260046020526040902054610e06907f00000000000000000000000000000000000000000000000000000000000000009067ffffffffffffffff16613586565b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036094013560e01c8314610e6f576040517ff309b94f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ea6367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013590565b90565b8484604051602001610eb9929190613a19565b6040516020818303038152906040528051906020012014610f06576040517fb481ac5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828510610f3f576040517f1ddafb1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085600003610f525750600c54610f78565b8484610f5f600189613a77565b818110610f6e57610f6e613a8e565b9050602002013590505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166337416d826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110099190613abd565b611014886001613ad6565b61101e9190613aee565b600d5461102b9190613ad6565b905060006040518060e00160405280611072610ea360347ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c9003013590565b815260200184815260200161109c89898c81811061109257611092613a8e565b9050602002013590565b81526020018381526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636d9a1c8b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115c9190613abd565b81526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632b31841e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f09190613abd565b815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fb3c491c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112869190613b2b565b90508073ffffffffffffffffffffffffffffffffffffffff166341493c607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c32e4e3e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561130f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113339190613abd565b8460405160200161138d9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405160208183030381529060405289896040518563ffffffff1660e01b81526004016113bd9493929190613b48565b60006040518083038186803b1580156113d557600080fd5b505afa1580156113e9573d6000803e3d6000fd5b50505060008a815260076020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055600890915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560098054918201815583527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018c9055518b92507f4c8916d6922facb329b3384e6c6b8441702f97ae6320597e1c5d0c245e5402ec9190a2505050505050505050565b600080600054700100000000000000000000000000000000900460ff1660028111156114ea576114ea61381b565b14611521576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061152b6134aa565b905060008160028111156115415761154161381b565b03611578576040517f92c506ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181600281111561158c5761158c61381b565b0361167a5760019150367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036098013560601c73ffffffffffffffffffffffffffffffffffffffff1663c94f598b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116349190613b2b565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555b600a5460ff161561168a57600191505b600182600281111561169e5761169e61381b565b146117a65760005467ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116916116de911642613a77565b11611715576040517ff2440b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6003548110156117a057600860006003838154811061173957611739613a8e565b6000918252602080832090910154835282019290925260400190205460ff1661178e576040517f965022d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061179881613bb3565b915050611718565b50600291505b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118579190613abd565b9050600183600281111561186d5761186d61381b565b03611ac65760005b60035481101561196a57600860006003838154811061189657611896613a8e565b6000918252602080832090910154835282019290925260400190205460ff166119585761192b60056000600384815481106118d3576118d3613a8e565b6000918252602080832090910154835282019290925260400190205473ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006135db565b6119557f000000000000000000000000000000000000000000000000000000000000000083613a77565b91505b8061196281613bb3565b915050611875565b50600a54819060ff1680156119915750600183600281111561198e5761198e61381b565b14155b15611a545760006127106119c57f000000000000000000000000000000000000000000000000000000000000000085613aee565b6119cf9190613beb565b600b5460009081526002602052604090205490915060ff1615611a2357600b54600090815260056020526040902054611a1e9073ffffffffffffffffffffffffffffffffffffffff16826135db565b611a46565b600654611a469073ffffffffffffffffffffffffffffffffffffffff16826135db565b611a508184613a77565b9250505b6000612710611a837f000000000000000000000000000000000000000000000000000000000000000084613aee565b611a8d9190613beb565b600654909150611ab39073ffffffffffffffffffffffffffffffffffffffff16826135db565b611abd8184613a77565b92505050611c74565b6002836002811115611ada57611ada61381b565b03611c425760005b600954811015611bb9576000612710611b3b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613aee565b611b459190613beb565b9050611b996007600060098581548110611b6157611b61613a8e565b6000918252602080832090910154835282019290925260400190205473ffffffffffffffffffffffffffffffffffffffff16826135db565b611ba38184613a77565b9250508080611bb190613bb3565b915050611ae2565b50611c11367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90033560601c7f00000000000000000000000000000000000000000000000000000000000000006135db565b611c3b7f000000000000000000000000000000000000000000000000000000000000000082613a77565b9050611c74565b6040517f8f8af25f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c9e7f0000000000000000000000000000000000000000000000000000000000000000826135db565b600080547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff8116680100000000000000004267ffffffffffffffff160290811783558592917fffffffffffffffffffffffffffffff000000000000000000ffffffffffffffff167fffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffff90911617700100000000000000000000000000000000836002811115611d4e57611d4e61381b565b021790556002811115611d6357611d6361381b565b6040517f5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da6090600090a27f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663838c2d1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611df457600080fd5b505af1158015611e08573d6000803e3d6000fd5b50505050505090565b905090565b60008054700100000000000000000000000000000000900460ff166002811115611e4257611e4261381b565b14611e79576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001611e836134aa565b6002811115611e9457611e9461381b565b03611ecb576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5460ff1615611f08576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b60035481101561208e576008600060038381548110611f2d57611f2d613a8e565b6000918252602080832090910154835282019290925260400190205460ff1661207c5767ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001667ffffffffffffffff166004600060038481548110611f9c57611f9c613a8e565b60009182526020808320909101548352820192909252604001902054611fcc9067ffffffffffffffff1642613a77565b111561207c57600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600380548290811061201157612011613a8e565b6000918252602080832090910154600b8190558252600590526040902054600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556001915061208e565b8061208681613bb3565b915050611f0c565b50806120c6576040517f4d35406900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6060611e11605460586136c1565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081208054908290559081900361213c576040517f17bfe5f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063f3fef3a390604401600060405180830381600087803b1580156121cc57600080fd5b505af11580156121e0573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461223e576040519150601f19603f3d011682016040523d82523d6000602084013e612243565b606091505b505090508061227e576040517f83e6cc6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6003818154811061229357600080fd5b600091825260209091200154905081565b60005471010000000000000000000000000000000000900460ff16156122f6576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036098013560601c6040517f7258a80700000000000000000000000000000000000000000000000000000000815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152909150600090819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637258a807906024016040805180830381865afa1580156123e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124049190613c26565b909250905073ffffffffffffffffffffffffffffffffffffffff83161561255c576124978373ffffffffffffffffffffffffffffffffffffffff1663bcef3b556040518163ffffffff1660e01b8152600401602060405180830381865afa158015612473573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190613abd565b91508273ffffffffffffffffffffffffffffffffffffffff16638b85902b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125089190613abd565b905060016125146134aa565b60028111156125255761252561381b565b0361255c576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81612593576040517f6a6bc3b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152828152602001819052600c829055600d8190553660b2146125c657639824bdab6000526004601cfd5b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360540135818111612660576040517ff40239db000000000000000000000000000000000000000000000000000000008152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900360140135600482015260240160405180910390fd5b61266a8282613a77565b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036094013560e01c7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166337416d826040518163ffffffff1660e01b8152600401602060405180830381865afa158015612706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272a9190613abd565b6127349190613aee565b1461276b576040517ff309b94f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffff1671010000000000000000000000000000000000178155604080517fd0e30db0000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263d0e30db09234926004808301939282900301818588803b15801561282c57600080fd5b505af1158015612840573d6000803e3d6000fd5b5050600080547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000164267ffffffffffffffff1617905550505050505050565b60008054700100000000000000000000000000000000900460ff1660028111156128ab576128ab61381b565b146128e2576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016128ec6134aa565b60028111156128fd576128fd61381b565b03612934576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005461296c907f00000000000000000000000000000000000000000000000000000000000000009067ffffffffffffffff16613586565b600a5460ff16156129a9576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036094013560e01c8314612a12576040517ff309b94f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612a46367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036074013590565b8484604051602001612a59929190613a19565b6040516020818303038152906040528051906020012014612aa6576040517fb481ac5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828610612adf576040517f1ddafb1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612af484848881811061109257611092613a8e565b8503612b2c576040517f2b9890d500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086600003612b3f5750600c54612b65565b8484612b4c60018a613a77565b818110612b5b57612b5b613a8e565b9050602002013590505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166337416d826040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf69190613abd565b612c01896001613ad6565b612c0b9190613aee565b600d54612c189190613ad6565b905060006040518060e00160405280612c5f610ea360347ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe369081013560f01c9003013590565b81526020018481526020018981526020018381526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636d9a1c8b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2b9190613abd565b81526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632b31841e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dbf9190613abd565b815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fb3c491c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e559190613b2b565b90508073ffffffffffffffffffffffffffffffffffffffff166341493c607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c32e4e3e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f029190613abd565b84604051602001612f5c9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405160208183030381529060405289896040518563ffffffff1660e01b8152600401612f8c9493929190613b48565b60006040518083038186803b158015612fa457600080fd5b505afa158015612fb8573d6000803e3d6000fd5b5050600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055505050600b989098555050600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000341461307b576040517f8620aa1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156130e357600080fd5b505af11580156130f7573d6000803e3d6000fd5b506000935061310592505050565b600054700100000000000000000000000000000000900460ff1660028111156131305761313061381b565b14613167576040517f67fe195000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016131716134aa565b60028111156131825761318261381b565b036131b9576040517fee72c13500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546131f1907f00000000000000000000000000000000000000000000000000000000000000009067ffffffffffffffff16613586565b600a5460ff161561322e576040517fb5cb2c6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526002602052604090205460ff1615613277576040517f85c345b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036094013560e01c81106132e0576040517f1ddafb1c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815260026020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915560048352818420805467ffffffffffffffff42167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909116179055600590925280832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560038054928301815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9091018390555182917f5d0aa65efd6bc0b5d87c52082ef77498d3d4a1fcbc8b89a0ab8fd3a14ed8516191a250565b60006001600054700100000000000000000000000000000000900460ff1660028111156134125761341261381b565b1461341d5750600090565b5060065473ffffffffffffffffffffffffffffffffffffffff1690565b6009818154811061229357600080fd5b7f0000000000000000000000000000000000000000000000000000000000000000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036014013560606134a36120c9565b9050909192565b6000367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036098013560601c6134e75750600290565b367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90036098013560601c73ffffffffffffffffffffffffffffffffffffffff1663200d2ed26040518163ffffffff1660e01b8152600401602060405180830381865afa158015613562573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e119190613c4a565b67ffffffffffffffff8281169061359f90831642613a77565b11156135d7576040517f3381d11400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839290613610908490613ad6565b90915550506040517f7eee288d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690637eee288d90604401600060405180830381600087803b1580156136a557600080fd5b505af11580156136b9573d6000803e3d6000fd5b505050505050565b604051818152367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90038284820160208401378260208301016000815260208101604052505092915050565b60008083601f84011261372557600080fd5b50813567ffffffffffffffff81111561373d57600080fd5b6020830191508360208260051b850101111561375857600080fd5b9250929050565b60008083601f84011261377157600080fd5b50813567ffffffffffffffff81111561378957600080fd5b60208301915083602082850101111561375857600080fd5b6000806000806000606086880312156137b957600080fd5b85359450602086013567ffffffffffffffff808211156137d857600080fd5b6137e489838a01613713565b909650945060408801359150808211156137fd57600080fd5b5061380a8882890161375f565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160038310613885577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000815180845260005b818110156138b157602081850181015186830182015201613895565b818111156138c3576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000613909602083018461388b565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146120c657600080fd5b60006020828403121561394457600080fd5b813561390981613910565b60006020828403121561396157600080fd5b5035919050565b6000806000806000806080878903121561398157600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156139a757600080fd5b6139b38a838b01613713565b909650945060608901359150808211156139cc57600080fd5b506139d989828a0161375f565b979a9699509497509295939492505050565b63ffffffff84168152826020820152606060408201526000613a10606083018461388b565b95945050505050565b60008184825b85811015613a3d578135835260209283019290910190600101613a1f565b509095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015613a8957613a89613a48565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215613acf57600080fd5b5051919050565b60008219821115613ae957613ae9613a48565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b2657613b26613a48565b500290565b600060208284031215613b3d57600080fd5b815161390981613910565b848152606060208201526000613b61606083018661388b565b82810360408401528381528385602083013760006020858301015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011682010191505095945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613be457613be4613a48565b5060010190565b600082613c21577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008060408385031215613c3957600080fd5b505080516020909101519092909150565b600060208284031215613c5c57600080fd5b81516003811061390957600080fdfea164736f6c634300080f000a",
}

// ZKFaultDisputeGameABI is the input ABI used to generate the binding from.
// Deprecated: Use ZKFaultDisputeGameMetaData.ABI instead.
var ZKFaultDisputeGameABI = ZKFaultDisputeGameMetaData.ABI

// ZKFaultDisputeGameBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ZKFaultDisputeGameMetaData.Bin instead.
var ZKFaultDisputeGameBin = ZKFaultDisputeGameMetaData.Bin

// DeployZKFaultDisputeGame deploys a new Ethereum contract, binding an instance of ZKFaultDisputeGame to it.
func DeployZKFaultDisputeGame(auth *bind.TransactOpts, backend bind.ContractBackend, _gameType uint32, _maxGenerateProofDuration uint64, _maxDetectFaultDuration uint64, _PROPOSER_BOND *big.Int, _CHALLENGER_BOND *big.Int, _FEE_VAULT_ADDRESS common.Address, _CHALLENGER_REWARD_PERCENTAGE *big.Int, _PROVER_REWARD_PERCENTAGE *big.Int, _weth common.Address, _anchorStateRegistry common.Address, _config common.Address, _l2ChainId *big.Int) (common.Address, *types.Transaction, *ZKFaultDisputeGame, error) {
	parsed, err := ZKFaultDisputeGameMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ZKFaultDisputeGameBin), backend, _gameType, _maxGenerateProofDuration, _maxDetectFaultDuration, _PROPOSER_BOND, _CHALLENGER_BOND, _FEE_VAULT_ADDRESS, _CHALLENGER_REWARD_PERCENTAGE, _PROVER_REWARD_PERCENTAGE, _weth, _anchorStateRegistry, _config, _l2ChainId)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ZKFaultDisputeGame{ZKFaultDisputeGameCaller: ZKFaultDisputeGameCaller{contract: contract}, ZKFaultDisputeGameTransactor: ZKFaultDisputeGameTransactor{contract: contract}, ZKFaultDisputeGameFilterer: ZKFaultDisputeGameFilterer{contract: contract}}, nil
}

// ZKFaultDisputeGame is an auto generated Go binding around an Ethereum contract.
type ZKFaultDisputeGame struct {
	ZKFaultDisputeGameCaller     // Read-only binding to the contract
	ZKFaultDisputeGameTransactor // Write-only binding to the contract
	ZKFaultDisputeGameFilterer   // Log filterer for contract events
}

// ZKFaultDisputeGameCaller is an auto generated read-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZKFaultDisputeGameTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZKFaultDisputeGameFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ZKFaultDisputeGameFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZKFaultDisputeGameSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ZKFaultDisputeGameSession struct {
	Contract     *ZKFaultDisputeGame // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ZKFaultDisputeGameCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ZKFaultDisputeGameCallerSession struct {
	Contract *ZKFaultDisputeGameCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// ZKFaultDisputeGameTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ZKFaultDisputeGameTransactorSession struct {
	Contract     *ZKFaultDisputeGameTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// ZKFaultDisputeGameRaw is an auto generated low-level Go binding around an Ethereum contract.
type ZKFaultDisputeGameRaw struct {
	Contract *ZKFaultDisputeGame // Generic contract binding to access the raw methods on
}

// ZKFaultDisputeGameCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameCallerRaw struct {
	Contract *ZKFaultDisputeGameCaller // Generic read-only contract binding to access the raw methods on
}

// ZKFaultDisputeGameTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ZKFaultDisputeGameTransactorRaw struct {
	Contract *ZKFaultDisputeGameTransactor // Generic write-only contract binding to access the raw methods on
}

// NewZKFaultDisputeGame creates a new instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGame(address common.Address, backend bind.ContractBackend) (*ZKFaultDisputeGame, error) {
	contract, err := bindZKFaultDisputeGame(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGame{ZKFaultDisputeGameCaller: ZKFaultDisputeGameCaller{contract: contract}, ZKFaultDisputeGameTransactor: ZKFaultDisputeGameTransactor{contract: contract}, ZKFaultDisputeGameFilterer: ZKFaultDisputeGameFilterer{contract: contract}}, nil
}

// NewZKFaultDisputeGameCaller creates a new read-only instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGameCaller(address common.Address, caller bind.ContractCaller) (*ZKFaultDisputeGameCaller, error) {
	contract, err := bindZKFaultDisputeGame(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameCaller{contract: contract}, nil
}

// NewZKFaultDisputeGameTransactor creates a new write-only instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGameTransactor(address common.Address, transactor bind.ContractTransactor) (*ZKFaultDisputeGameTransactor, error) {
	contract, err := bindZKFaultDisputeGame(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameTransactor{contract: contract}, nil
}

// NewZKFaultDisputeGameFilterer creates a new log filterer instance of ZKFaultDisputeGame, bound to a specific deployed contract.
func NewZKFaultDisputeGameFilterer(address common.Address, filterer bind.ContractFilterer) (*ZKFaultDisputeGameFilterer, error) {
	contract, err := bindZKFaultDisputeGame(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameFilterer{contract: contract}, nil
}

// bindZKFaultDisputeGame binds a generic wrapper to an already deployed contract.
func bindZKFaultDisputeGame(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ZKFaultDisputeGameMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ZKFaultDisputeGame.Contract.ZKFaultDisputeGameCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ZKFaultDisputeGameTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ZKFaultDisputeGameTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ZKFaultDisputeGame.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.contract.Transact(opts, method, params...)
}

// CHALLENGERBOND is a free data retrieval call binding the contract method 0xbb825afc.
//
// Solidity: function CHALLENGER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) CHALLENGERBOND(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "CHALLENGER_BOND")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHALLENGERBOND is a free data retrieval call binding the contract method 0xbb825afc.
//
// Solidity: function CHALLENGER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) CHALLENGERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERBOND is a free data retrieval call binding the contract method 0xbb825afc.
//
// Solidity: function CHALLENGER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) CHALLENGERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0x853b7f3f.
//
// Solidity: function CHALLENGER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) CHALLENGERREWARDPERCENTAGE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "CHALLENGER_REWARD_PERCENTAGE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHALLENGERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0x853b7f3f.
//
// Solidity: function CHALLENGER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) CHALLENGERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// CHALLENGERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0x853b7f3f.
//
// Solidity: function CHALLENGER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) CHALLENGERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.CHALLENGERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// FEEVAULTADDRESS is a free data retrieval call binding the contract method 0x126db75e.
//
// Solidity: function FEE_VAULT_ADDRESS() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) FEEVAULTADDRESS(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "FEE_VAULT_ADDRESS")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FEEVAULTADDRESS is a free data retrieval call binding the contract method 0x126db75e.
//
// Solidity: function FEE_VAULT_ADDRESS() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) FEEVAULTADDRESS() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.FEEVAULTADDRESS(&_ZKFaultDisputeGame.CallOpts)
}

// FEEVAULTADDRESS is a free data retrieval call binding the contract method 0x126db75e.
//
// Solidity: function FEE_VAULT_ADDRESS() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) FEEVAULTADDRESS() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.FEEVAULTADDRESS(&_ZKFaultDisputeGame.CallOpts)
}

// PERCENTAGEDIVISOR is a free data retrieval call binding the contract method 0xcaf29765.
//
// Solidity: function PERCENTAGE_DIVISOR() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) PERCENTAGEDIVISOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "PERCENTAGE_DIVISOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PERCENTAGEDIVISOR is a free data retrieval call binding the contract method 0xcaf29765.
//
// Solidity: function PERCENTAGE_DIVISOR() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) PERCENTAGEDIVISOR() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PERCENTAGEDIVISOR(&_ZKFaultDisputeGame.CallOpts)
}

// PERCENTAGEDIVISOR is a free data retrieval call binding the contract method 0xcaf29765.
//
// Solidity: function PERCENTAGE_DIVISOR() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) PERCENTAGEDIVISOR() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PERCENTAGEDIVISOR(&_ZKFaultDisputeGame.CallOpts)
}

// PROPOSERBOND is a free data retrieval call binding the contract method 0x1ef7a1f7.
//
// Solidity: function PROPOSER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) PROPOSERBOND(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "PROPOSER_BOND")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PROPOSERBOND is a free data retrieval call binding the contract method 0x1ef7a1f7.
//
// Solidity: function PROPOSER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) PROPOSERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROPOSERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// PROPOSERBOND is a free data retrieval call binding the contract method 0x1ef7a1f7.
//
// Solidity: function PROPOSER_BOND() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) PROPOSERBOND() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROPOSERBOND(&_ZKFaultDisputeGame.CallOpts)
}

// PROVERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0xd60d026d.
//
// Solidity: function PROVER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) PROVERREWARDPERCENTAGE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "PROVER_REWARD_PERCENTAGE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PROVERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0xd60d026d.
//
// Solidity: function PROVER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) PROVERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROVERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// PROVERREWARDPERCENTAGE is a free data retrieval call binding the contract method 0xd60d026d.
//
// Solidity: function PROVER_REWARD_PERCENTAGE() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) PROVERREWARDPERCENTAGE() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.PROVERREWARDPERCENTAGE(&_ZKFaultDisputeGame.CallOpts)
}

// AnchorStateRegistry is a free data retrieval call binding the contract method 0x5c0cba33.
//
// Solidity: function anchorStateRegistry() view returns(address registry_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) AnchorStateRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "anchorStateRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AnchorStateRegistry is a free data retrieval call binding the contract method 0x5c0cba33.
//
// Solidity: function anchorStateRegistry() view returns(address registry_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) AnchorStateRegistry() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.AnchorStateRegistry(&_ZKFaultDisputeGame.CallOpts)
}

// AnchorStateRegistry is a free data retrieval call binding the contract method 0x5c0cba33.
//
// Solidity: function anchorStateRegistry() view returns(address registry_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) AnchorStateRegistry() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.AnchorStateRegistry(&_ZKFaultDisputeGame.CallOpts)
}

// ChallengedClaimIndexes is a free data retrieval call binding the contract method 0x7720772d.
//
// Solidity: function challengedClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaimIndexes(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaimIndexes", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ChallengedClaimIndexes is a free data retrieval call binding the contract method 0x7720772d.
//
// Solidity: function challengedClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimIndexes is a free data retrieval call binding the contract method 0x7720772d.
//
// Solidity: function challengedClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimIndexesLen is a free data retrieval call binding the contract method 0x1b720f3f.
//
// Solidity: function challengedClaimIndexesLen() view returns(uint256 len_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaimIndexesLen(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaimIndexesLen")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ChallengedClaimIndexesLen is a free data retrieval call binding the contract method 0x1b720f3f.
//
// Solidity: function challengedClaimIndexesLen() view returns(uint256 len_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaimIndexesLen() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimIndexesLen(&_ZKFaultDisputeGame.CallOpts)
}

// ChallengedClaimIndexesLen is a free data retrieval call binding the contract method 0x1b720f3f.
//
// Solidity: function challengedClaimIndexesLen() view returns(uint256 len_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaimIndexesLen() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimIndexesLen(&_ZKFaultDisputeGame.CallOpts)
}

// ChallengedClaims is a free data retrieval call binding the contract method 0xcd4fb3fc.
//
// Solidity: function challengedClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaims(opts *bind.CallOpts, arg0 *big.Int) (bool, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaims", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ChallengedClaims is a free data retrieval call binding the contract method 0xcd4fb3fc.
//
// Solidity: function challengedClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaims is a free data retrieval call binding the contract method 0xcd4fb3fc.
//
// Solidity: function challengedClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimsTimestamp is a free data retrieval call binding the contract method 0xedcf913b.
//
// Solidity: function challengedClaimsTimestamp(uint256 ) view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ChallengedClaimsTimestamp(opts *bind.CallOpts, arg0 *big.Int) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengedClaimsTimestamp", arg0)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ChallengedClaimsTimestamp is a free data retrieval call binding the contract method 0xedcf913b.
//
// Solidity: function challengedClaimsTimestamp(uint256 ) view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengedClaimsTimestamp(arg0 *big.Int) (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimsTimestamp(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ChallengedClaimsTimestamp is a free data retrieval call binding the contract method 0xedcf913b.
//
// Solidity: function challengedClaimsTimestamp(uint256 ) view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ChallengedClaimsTimestamp(arg0 *big.Int) (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ChallengedClaimsTimestamp(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Challengers is a free data retrieval call binding the contract method 0x6b45ebcb.
//
// Solidity: function challengers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Challengers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "challengers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Challengers is a free data retrieval call binding the contract method 0x6b45ebcb.
//
// Solidity: function challengers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Challengers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Challengers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Challengers is a free data retrieval call binding the contract method 0x6b45ebcb.
//
// Solidity: function challengers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Challengers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Challengers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ClaimsHash is a free data retrieval call binding the contract method 0xf1126de1.
//
// Solidity: function claimsHash() pure returns(bytes32 claimsHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ClaimsHash(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "claimsHash")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ClaimsHash is a free data retrieval call binding the contract method 0xf1126de1.
//
// Solidity: function claimsHash() pure returns(bytes32 claimsHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ClaimsHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsHash(&_ZKFaultDisputeGame.CallOpts)
}

// ClaimsHash is a free data retrieval call binding the contract method 0xf1126de1.
//
// Solidity: function claimsHash() pure returns(bytes32 claimsHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ClaimsHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsHash(&_ZKFaultDisputeGame.CallOpts)
}

// ClaimsLength is a free data retrieval call binding the contract method 0xaa23fddc.
//
// Solidity: function claimsLength() pure returns(uint256 claimsLength_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ClaimsLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "claimsLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ClaimsLength is a free data retrieval call binding the contract method 0xaa23fddc.
//
// Solidity: function claimsLength() pure returns(uint256 claimsLength_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ClaimsLength() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsLength(&_ZKFaultDisputeGame.CallOpts)
}

// ClaimsLength is a free data retrieval call binding the contract method 0xaa23fddc.
//
// Solidity: function claimsLength() pure returns(uint256 claimsLength_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ClaimsLength() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.ClaimsLength(&_ZKFaultDisputeGame.CallOpts)
}

// Config is a free data retrieval call binding the contract method 0x79502c55.
//
// Solidity: function config() view returns(address config_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Config(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "config")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Config is a free data retrieval call binding the contract method 0x79502c55.
//
// Solidity: function config() view returns(address config_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Config() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Config(&_ZKFaultDisputeGame.CallOpts)
}

// Config is a free data retrieval call binding the contract method 0x79502c55.
//
// Solidity: function config() view returns(address config_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Config() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Config(&_ZKFaultDisputeGame.CallOpts)
}

// CreatedAt is a free data retrieval call binding the contract method 0xcf09e0d0.
//
// Solidity: function createdAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) CreatedAt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "createdAt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// CreatedAt is a free data retrieval call binding the contract method 0xcf09e0d0.
//
// Solidity: function createdAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) CreatedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.CreatedAt(&_ZKFaultDisputeGame.CallOpts)
}

// CreatedAt is a free data retrieval call binding the contract method 0xcf09e0d0.
//
// Solidity: function createdAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) CreatedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.CreatedAt(&_ZKFaultDisputeGame.CallOpts)
}

// Credit is a free data retrieval call binding the contract method 0xd5d44d80.
//
// Solidity: function credit(address ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Credit(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "credit", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Credit is a free data retrieval call binding the contract method 0xd5d44d80.
//
// Solidity: function credit(address ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Credit(arg0 common.Address) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.Credit(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Credit is a free data retrieval call binding the contract method 0xd5d44d80.
//
// Solidity: function credit(address ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Credit(arg0 common.Address) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.Credit(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ExtraData is a free data retrieval call binding the contract method 0x609d3334.
//
// Solidity: function extraData() pure returns(bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ExtraData(opts *bind.CallOpts) ([]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "extraData")

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// ExtraData is a free data retrieval call binding the contract method 0x609d3334.
//
// Solidity: function extraData() pure returns(bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ExtraData() ([]byte, error) {
	return _ZKFaultDisputeGame.Contract.ExtraData(&_ZKFaultDisputeGame.CallOpts)
}

// ExtraData is a free data retrieval call binding the contract method 0x609d3334.
//
// Solidity: function extraData() pure returns(bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ExtraData() ([]byte, error) {
	return _ZKFaultDisputeGame.Contract.ExtraData(&_ZKFaultDisputeGame.CallOpts)
}

// FaultProofProver is a free data retrieval call binding the contract method 0x35a66eba.
//
// Solidity: function faultProofProver() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) FaultProofProver(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "faultProofProver")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FaultProofProver is a free data retrieval call binding the contract method 0x35a66eba.
//
// Solidity: function faultProofProver() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) FaultProofProver() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.FaultProofProver(&_ZKFaultDisputeGame.CallOpts)
}

// FaultProofProver is a free data retrieval call binding the contract method 0x35a66eba.
//
// Solidity: function faultProofProver() view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) FaultProofProver() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.FaultProofProver(&_ZKFaultDisputeGame.CallOpts)
}

// GameCreator is a free data retrieval call binding the contract method 0x37b1b229.
//
// Solidity: function gameCreator() pure returns(address creator_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameCreator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameCreator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GameCreator is a free data retrieval call binding the contract method 0x37b1b229.
//
// Solidity: function gameCreator() pure returns(address creator_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameCreator() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameCreator(&_ZKFaultDisputeGame.CallOpts)
}

// GameCreator is a free data retrieval call binding the contract method 0x37b1b229.
//
// Solidity: function gameCreator() pure returns(address creator_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameCreator() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameCreator(&_ZKFaultDisputeGame.CallOpts)
}

// GameData is a free data retrieval call binding the contract method 0xfa24f743.
//
// Solidity: function gameData() view returns(uint32 gameType_, bytes32 rootClaim_, bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameData(opts *bind.CallOpts) (struct {
	GameType  uint32
	RootClaim [32]byte
	ExtraData []byte
}, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameData")

	outstruct := new(struct {
		GameType  uint32
		RootClaim [32]byte
		ExtraData []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.GameType = *abi.ConvertType(out[0], new(uint32)).(*uint32)
	outstruct.RootClaim = *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)
	outstruct.ExtraData = *abi.ConvertType(out[2], new([]byte)).(*[]byte)

	return *outstruct, err

}

// GameData is a free data retrieval call binding the contract method 0xfa24f743.
//
// Solidity: function gameData() view returns(uint32 gameType_, bytes32 rootClaim_, bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameData() (struct {
	GameType  uint32
	RootClaim [32]byte
	ExtraData []byte
}, error) {
	return _ZKFaultDisputeGame.Contract.GameData(&_ZKFaultDisputeGame.CallOpts)
}

// GameData is a free data retrieval call binding the contract method 0xfa24f743.
//
// Solidity: function gameData() view returns(uint32 gameType_, bytes32 rootClaim_, bytes extraData_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameData() (struct {
	GameType  uint32
	RootClaim [32]byte
	ExtraData []byte
}, error) {
	return _ZKFaultDisputeGame.Contract.GameData(&_ZKFaultDisputeGame.CallOpts)
}

// GameType is a free data retrieval call binding the contract method 0xbbdc02db.
//
// Solidity: function gameType() view returns(uint32 gameType_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameType(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameType")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GameType is a free data retrieval call binding the contract method 0xbbdc02db.
//
// Solidity: function gameType() view returns(uint32 gameType_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameType() (uint32, error) {
	return _ZKFaultDisputeGame.Contract.GameType(&_ZKFaultDisputeGame.CallOpts)
}

// GameType is a free data retrieval call binding the contract method 0xbbdc02db.
//
// Solidity: function gameType() view returns(uint32 gameType_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameType() (uint32, error) {
	return _ZKFaultDisputeGame.Contract.GameType(&_ZKFaultDisputeGame.CallOpts)
}

// GameWinner is a free data retrieval call binding the contract method 0xc94f598b.
//
// Solidity: function gameWinner() view returns(address gameWinner_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) GameWinner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "gameWinner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GameWinner is a free data retrieval call binding the contract method 0xc94f598b.
//
// Solidity: function gameWinner() view returns(address gameWinner_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) GameWinner() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameWinner(&_ZKFaultDisputeGame.CallOpts)
}

// GameWinner is a free data retrieval call binding the contract method 0xc94f598b.
//
// Solidity: function gameWinner() view returns(address gameWinner_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) GameWinner() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.GameWinner(&_ZKFaultDisputeGame.CallOpts)
}

// InvalidChallengeClaimIndexes is a free data retrieval call binding the contract method 0xdb8cb962.
//
// Solidity: function invalidChallengeClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) InvalidChallengeClaimIndexes(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "invalidChallengeClaimIndexes", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// InvalidChallengeClaimIndexes is a free data retrieval call binding the contract method 0xdb8cb962.
//
// Solidity: function invalidChallengeClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) InvalidChallengeClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// InvalidChallengeClaimIndexes is a free data retrieval call binding the contract method 0xdb8cb962.
//
// Solidity: function invalidChallengeClaimIndexes(uint256 ) view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) InvalidChallengeClaimIndexes(arg0 *big.Int) (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaimIndexes(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// InvalidChallengeClaims is a free data retrieval call binding the contract method 0xc6f647b8.
//
// Solidity: function invalidChallengeClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) InvalidChallengeClaims(opts *bind.CallOpts, arg0 *big.Int) (bool, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "invalidChallengeClaims", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// InvalidChallengeClaims is a free data retrieval call binding the contract method 0xc6f647b8.
//
// Solidity: function invalidChallengeClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) InvalidChallengeClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// InvalidChallengeClaims is a free data retrieval call binding the contract method 0xc6f647b8.
//
// Solidity: function invalidChallengeClaims(uint256 ) view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) InvalidChallengeClaims(arg0 *big.Int) (bool, error) {
	return _ZKFaultDisputeGame.Contract.InvalidChallengeClaims(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// IsChallengeSuccess is a free data retrieval call binding the contract method 0xe5d5f2e7.
//
// Solidity: function isChallengeSuccess() view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) IsChallengeSuccess(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "isChallengeSuccess")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsChallengeSuccess is a free data retrieval call binding the contract method 0xe5d5f2e7.
//
// Solidity: function isChallengeSuccess() view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) IsChallengeSuccess() (bool, error) {
	return _ZKFaultDisputeGame.Contract.IsChallengeSuccess(&_ZKFaultDisputeGame.CallOpts)
}

// IsChallengeSuccess is a free data retrieval call binding the contract method 0xe5d5f2e7.
//
// Solidity: function isChallengeSuccess() view returns(bool)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) IsChallengeSuccess() (bool, error) {
	return _ZKFaultDisputeGame.Contract.IsChallengeSuccess(&_ZKFaultDisputeGame.CallOpts)
}

// L1Head is a free data retrieval call binding the contract method 0x6361506d.
//
// Solidity: function l1Head() pure returns(bytes32 l1Head_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) L1Head(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "l1Head")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// L1Head is a free data retrieval call binding the contract method 0x6361506d.
//
// Solidity: function l1Head() pure returns(bytes32 l1Head_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) L1Head() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.L1Head(&_ZKFaultDisputeGame.CallOpts)
}

// L1Head is a free data retrieval call binding the contract method 0x6361506d.
//
// Solidity: function l1Head() pure returns(bytes32 l1Head_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) L1Head() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.L1Head(&_ZKFaultDisputeGame.CallOpts)
}

// L2BlockNumber is a free data retrieval call binding the contract method 0x8b85902b.
//
// Solidity: function l2BlockNumber() pure returns(uint256 l2BlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) L2BlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "l2BlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// L2BlockNumber is a free data retrieval call binding the contract method 0x8b85902b.
//
// Solidity: function l2BlockNumber() pure returns(uint256 l2BlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) L2BlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2BlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// L2BlockNumber is a free data retrieval call binding the contract method 0x8b85902b.
//
// Solidity: function l2BlockNumber() pure returns(uint256 l2BlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) L2BlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2BlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// L2ChainId is a free data retrieval call binding the contract method 0xd6ae3cd5.
//
// Solidity: function l2ChainId() view returns(uint256 l2ChainId_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) L2ChainId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "l2ChainId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// L2ChainId is a free data retrieval call binding the contract method 0xd6ae3cd5.
//
// Solidity: function l2ChainId() view returns(uint256 l2ChainId_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) L2ChainId() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2ChainId(&_ZKFaultDisputeGame.CallOpts)
}

// L2ChainId is a free data retrieval call binding the contract method 0xd6ae3cd5.
//
// Solidity: function l2ChainId() view returns(uint256 l2ChainId_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) L2ChainId() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.L2ChainId(&_ZKFaultDisputeGame.CallOpts)
}

// MaxClockDuration is a free data retrieval call binding the contract method 0xdabd396d.
//
// Solidity: function maxClockDuration() view returns(uint64 maxClockDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) MaxClockDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "maxClockDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MaxClockDuration is a free data retrieval call binding the contract method 0xdabd396d.
//
// Solidity: function maxClockDuration() view returns(uint64 maxClockDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) MaxClockDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxClockDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxClockDuration is a free data retrieval call binding the contract method 0xdabd396d.
//
// Solidity: function maxClockDuration() view returns(uint64 maxClockDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) MaxClockDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxClockDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxDetectFaultDuration is a free data retrieval call binding the contract method 0x57335705.
//
// Solidity: function maxDetectFaultDuration() view returns(uint64 maxDetectFaultDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) MaxDetectFaultDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "maxDetectFaultDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MaxDetectFaultDuration is a free data retrieval call binding the contract method 0x57335705.
//
// Solidity: function maxDetectFaultDuration() view returns(uint64 maxDetectFaultDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) MaxDetectFaultDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxDetectFaultDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxDetectFaultDuration is a free data retrieval call binding the contract method 0x57335705.
//
// Solidity: function maxDetectFaultDuration() view returns(uint64 maxDetectFaultDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) MaxDetectFaultDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxDetectFaultDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxGenerateProofDuration is a free data retrieval call binding the contract method 0x5ba42ed4.
//
// Solidity: function maxGenerateProofDuration() view returns(uint64 maxGenerateProofDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) MaxGenerateProofDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "maxGenerateProofDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// MaxGenerateProofDuration is a free data retrieval call binding the contract method 0x5ba42ed4.
//
// Solidity: function maxGenerateProofDuration() view returns(uint64 maxGenerateProofDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) MaxGenerateProofDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxGenerateProofDuration(&_ZKFaultDisputeGame.CallOpts)
}

// MaxGenerateProofDuration is a free data retrieval call binding the contract method 0x5ba42ed4.
//
// Solidity: function maxGenerateProofDuration() view returns(uint64 maxGenerateProofDuration_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) MaxGenerateProofDuration() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.MaxGenerateProofDuration(&_ZKFaultDisputeGame.CallOpts)
}

// ParentGameProxy is a free data retrieval call binding the contract method 0x864cbb35.
//
// Solidity: function parentGameProxy() pure returns(address parentGameProxy_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ParentGameProxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "parentGameProxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ParentGameProxy is a free data retrieval call binding the contract method 0x864cbb35.
//
// Solidity: function parentGameProxy() pure returns(address parentGameProxy_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ParentGameProxy() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ParentGameProxy(&_ZKFaultDisputeGame.CallOpts)
}

// ParentGameProxy is a free data retrieval call binding the contract method 0x864cbb35.
//
// Solidity: function parentGameProxy() pure returns(address parentGameProxy_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ParentGameProxy() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ParentGameProxy(&_ZKFaultDisputeGame.CallOpts)
}

// ResolvedAt is a free data retrieval call binding the contract method 0x19effeb4.
//
// Solidity: function resolvedAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ResolvedAt(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "resolvedAt")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ResolvedAt is a free data retrieval call binding the contract method 0x19effeb4.
//
// Solidity: function resolvedAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ResolvedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ResolvedAt(&_ZKFaultDisputeGame.CallOpts)
}

// ResolvedAt is a free data retrieval call binding the contract method 0x19effeb4.
//
// Solidity: function resolvedAt() view returns(uint64)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ResolvedAt() (uint64, error) {
	return _ZKFaultDisputeGame.Contract.ResolvedAt(&_ZKFaultDisputeGame.CallOpts)
}

// RootClaim is a free data retrieval call binding the contract method 0xbcef3b55.
//
// Solidity: function rootClaim() pure returns(bytes32 rootClaim_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) RootClaim(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "rootClaim")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// RootClaim is a free data retrieval call binding the contract method 0xbcef3b55.
//
// Solidity: function rootClaim() pure returns(bytes32 rootClaim_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) RootClaim() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.RootClaim(&_ZKFaultDisputeGame.CallOpts)
}

// RootClaim is a free data retrieval call binding the contract method 0xbcef3b55.
//
// Solidity: function rootClaim() pure returns(bytes32 rootClaim_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) RootClaim() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.RootClaim(&_ZKFaultDisputeGame.CallOpts)
}

// StartingBlockNumber is a free data retrieval call binding the contract method 0x70872aa5.
//
// Solidity: function startingBlockNumber() view returns(uint256 startingBlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) StartingBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "startingBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StartingBlockNumber is a free data retrieval call binding the contract method 0x70872aa5.
//
// Solidity: function startingBlockNumber() view returns(uint256 startingBlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) StartingBlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.StartingBlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// StartingBlockNumber is a free data retrieval call binding the contract method 0x70872aa5.
//
// Solidity: function startingBlockNumber() view returns(uint256 startingBlockNumber_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) StartingBlockNumber() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.StartingBlockNumber(&_ZKFaultDisputeGame.CallOpts)
}

// StartingOutputRoot is a free data retrieval call binding the contract method 0x57da950e.
//
// Solidity: function startingOutputRoot() view returns(bytes32 root, uint256 l2BlockNumber)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) StartingOutputRoot(opts *bind.CallOpts) (struct {
	Root          [32]byte
	L2BlockNumber *big.Int
}, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "startingOutputRoot")

	outstruct := new(struct {
		Root          [32]byte
		L2BlockNumber *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Root = *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	outstruct.L2BlockNumber = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// StartingOutputRoot is a free data retrieval call binding the contract method 0x57da950e.
//
// Solidity: function startingOutputRoot() view returns(bytes32 root, uint256 l2BlockNumber)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) StartingOutputRoot() (struct {
	Root          [32]byte
	L2BlockNumber *big.Int
}, error) {
	return _ZKFaultDisputeGame.Contract.StartingOutputRoot(&_ZKFaultDisputeGame.CallOpts)
}

// StartingOutputRoot is a free data retrieval call binding the contract method 0x57da950e.
//
// Solidity: function startingOutputRoot() view returns(bytes32 root, uint256 l2BlockNumber)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) StartingOutputRoot() (struct {
	Root          [32]byte
	L2BlockNumber *big.Int
}, error) {
	return _ZKFaultDisputeGame.Contract.StartingOutputRoot(&_ZKFaultDisputeGame.CallOpts)
}

// StartingRootHash is a free data retrieval call binding the contract method 0x25fc2ace.
//
// Solidity: function startingRootHash() view returns(bytes32 startingRootHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) StartingRootHash(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "startingRootHash")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// StartingRootHash is a free data retrieval call binding the contract method 0x25fc2ace.
//
// Solidity: function startingRootHash() view returns(bytes32 startingRootHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) StartingRootHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.StartingRootHash(&_ZKFaultDisputeGame.CallOpts)
}

// StartingRootHash is a free data retrieval call binding the contract method 0x25fc2ace.
//
// Solidity: function startingRootHash() view returns(bytes32 startingRootHash_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) StartingRootHash() ([32]byte, error) {
	return _ZKFaultDisputeGame.Contract.StartingRootHash(&_ZKFaultDisputeGame.CallOpts)
}

// Status is a free data retrieval call binding the contract method 0x200d2ed2.
//
// Solidity: function status() view returns(uint8)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Status(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "status")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Status is a free data retrieval call binding the contract method 0x200d2ed2.
//
// Solidity: function status() view returns(uint8)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Status() (uint8, error) {
	return _ZKFaultDisputeGame.Contract.Status(&_ZKFaultDisputeGame.CallOpts)
}

// Status is a free data retrieval call binding the contract method 0x200d2ed2.
//
// Solidity: function status() view returns(uint8)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Status() (uint8, error) {
	return _ZKFaultDisputeGame.Contract.Status(&_ZKFaultDisputeGame.CallOpts)
}

// SuccessfulChallengeIndex is a free data retrieval call binding the contract method 0x1a27d158.
//
// Solidity: function successfulChallengeIndex() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) SuccessfulChallengeIndex(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "successfulChallengeIndex")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SuccessfulChallengeIndex is a free data retrieval call binding the contract method 0x1a27d158.
//
// Solidity: function successfulChallengeIndex() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) SuccessfulChallengeIndex() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.SuccessfulChallengeIndex(&_ZKFaultDisputeGame.CallOpts)
}

// SuccessfulChallengeIndex is a free data retrieval call binding the contract method 0x1a27d158.
//
// Solidity: function successfulChallengeIndex() view returns(uint256)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) SuccessfulChallengeIndex() (*big.Int, error) {
	return _ZKFaultDisputeGame.Contract.SuccessfulChallengeIndex(&_ZKFaultDisputeGame.CallOpts)
}

// ValidityProofProvers is a free data retrieval call binding the contract method 0xc1eee53e.
//
// Solidity: function validityProofProvers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) ValidityProofProvers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "validityProofProvers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ValidityProofProvers is a free data retrieval call binding the contract method 0xc1eee53e.
//
// Solidity: function validityProofProvers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ValidityProofProvers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ValidityProofProvers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// ValidityProofProvers is a free data retrieval call binding the contract method 0xc1eee53e.
//
// Solidity: function validityProofProvers(uint256 ) view returns(address)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) ValidityProofProvers(arg0 *big.Int) (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.ValidityProofProvers(&_ZKFaultDisputeGame.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Version() (string, error) {
	return _ZKFaultDisputeGame.Contract.Version(&_ZKFaultDisputeGame.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Version() (string, error) {
	return _ZKFaultDisputeGame.Contract.Version(&_ZKFaultDisputeGame.CallOpts)
}

// Weth is a free data retrieval call binding the contract method 0x3fc8cef3.
//
// Solidity: function weth() view returns(address weth_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCaller) Weth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZKFaultDisputeGame.contract.Call(opts, &out, "weth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Weth is a free data retrieval call binding the contract method 0x3fc8cef3.
//
// Solidity: function weth() view returns(address weth_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Weth() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Weth(&_ZKFaultDisputeGame.CallOpts)
}

// Weth is a free data retrieval call binding the contract method 0x3fc8cef3.
//
// Solidity: function weth() view returns(address weth_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameCallerSession) Weth() (common.Address, error) {
	return _ZKFaultDisputeGame.Contract.Weth(&_ZKFaultDisputeGame.CallOpts)
}

// ChallengeByProof is a paid mutator transaction binding the contract method 0x8e0386ba.
//
// Solidity: function challengeByProof(uint256 _disputeClaimIndex, bytes32 _expectedClaim, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ChallengeByProof(opts *bind.TransactOpts, _disputeClaimIndex *big.Int, _expectedClaim [32]byte, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "challengeByProof", _disputeClaimIndex, _expectedClaim, _originalClaims, _proof)
}

// ChallengeByProof is a paid mutator transaction binding the contract method 0x8e0386ba.
//
// Solidity: function challengeByProof(uint256 _disputeClaimIndex, bytes32 _expectedClaim, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengeByProof(_disputeClaimIndex *big.Int, _expectedClaim [32]byte, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeByProof(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _expectedClaim, _originalClaims, _proof)
}

// ChallengeByProof is a paid mutator transaction binding the contract method 0x8e0386ba.
//
// Solidity: function challengeByProof(uint256 _disputeClaimIndex, bytes32 _expectedClaim, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ChallengeByProof(_disputeClaimIndex *big.Int, _expectedClaim [32]byte, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeByProof(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _expectedClaim, _originalClaims, _proof)
}

// ChallengeBySignal is a paid mutator transaction binding the contract method 0x9ba51b73.
//
// Solidity: function challengeBySignal(uint256 _disputeClaimIndex) payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ChallengeBySignal(opts *bind.TransactOpts, _disputeClaimIndex *big.Int) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "challengeBySignal", _disputeClaimIndex)
}

// ChallengeBySignal is a paid mutator transaction binding the contract method 0x9ba51b73.
//
// Solidity: function challengeBySignal(uint256 _disputeClaimIndex) payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ChallengeBySignal(_disputeClaimIndex *big.Int) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeBySignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex)
}

// ChallengeBySignal is a paid mutator transaction binding the contract method 0x9ba51b73.
//
// Solidity: function challengeBySignal(uint256 _disputeClaimIndex) payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ChallengeBySignal(_disputeClaimIndex *big.Int) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ChallengeBySignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex)
}

// ClaimCredit is a paid mutator transaction binding the contract method 0x60e27464.
//
// Solidity: function claimCredit(address _recipient) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ClaimCredit(opts *bind.TransactOpts, _recipient common.Address) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "claimCredit", _recipient)
}

// ClaimCredit is a paid mutator transaction binding the contract method 0x60e27464.
//
// Solidity: function claimCredit(address _recipient) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ClaimCredit(_recipient common.Address) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ClaimCredit(&_ZKFaultDisputeGame.TransactOpts, _recipient)
}

// ClaimCredit is a paid mutator transaction binding the contract method 0x60e27464.
//
// Solidity: function claimCredit(address _recipient) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ClaimCredit(_recipient common.Address) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ClaimCredit(&_ZKFaultDisputeGame.TransactOpts, _recipient)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Initialize() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Initialize(&_ZKFaultDisputeGame.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() payable returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) Initialize() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Initialize(&_ZKFaultDisputeGame.TransactOpts)
}

// Resolve is a paid mutator transaction binding the contract method 0x2810e1d6.
//
// Solidity: function resolve() returns(uint8 status_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) Resolve(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "resolve")
}

// Resolve is a paid mutator transaction binding the contract method 0x2810e1d6.
//
// Solidity: function resolve() returns(uint8 status_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) Resolve() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Resolve(&_ZKFaultDisputeGame.TransactOpts)
}

// Resolve is a paid mutator transaction binding the contract method 0x2810e1d6.
//
// Solidity: function resolve() returns(uint8 status_)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) Resolve() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.Resolve(&_ZKFaultDisputeGame.TransactOpts)
}

// ResolveClaim is a paid mutator transaction binding the contract method 0x4bf8f327.
//
// Solidity: function resolveClaim() returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) ResolveClaim(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "resolveClaim")
}

// ResolveClaim is a paid mutator transaction binding the contract method 0x4bf8f327.
//
// Solidity: function resolveClaim() returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) ResolveClaim() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ResolveClaim(&_ZKFaultDisputeGame.TransactOpts)
}

// ResolveClaim is a paid mutator transaction binding the contract method 0x4bf8f327.
//
// Solidity: function resolveClaim() returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) ResolveClaim() (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.ResolveClaim(&_ZKFaultDisputeGame.TransactOpts)
}

// SubmitProofForSignal is a paid mutator transaction binding the contract method 0x1ad7e0e2.
//
// Solidity: function submitProofForSignal(uint256 _disputeClaimIndex, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactor) SubmitProofForSignal(opts *bind.TransactOpts, _disputeClaimIndex *big.Int, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.contract.Transact(opts, "submitProofForSignal", _disputeClaimIndex, _originalClaims, _proof)
}

// SubmitProofForSignal is a paid mutator transaction binding the contract method 0x1ad7e0e2.
//
// Solidity: function submitProofForSignal(uint256 _disputeClaimIndex, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameSession) SubmitProofForSignal(_disputeClaimIndex *big.Int, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.SubmitProofForSignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _originalClaims, _proof)
}

// SubmitProofForSignal is a paid mutator transaction binding the contract method 0x1ad7e0e2.
//
// Solidity: function submitProofForSignal(uint256 _disputeClaimIndex, bytes32[] _originalClaims, bytes _proof) returns()
func (_ZKFaultDisputeGame *ZKFaultDisputeGameTransactorSession) SubmitProofForSignal(_disputeClaimIndex *big.Int, _originalClaims [][32]byte, _proof []byte) (*types.Transaction, error) {
	return _ZKFaultDisputeGame.Contract.SubmitProofForSignal(&_ZKFaultDisputeGame.TransactOpts, _disputeClaimIndex, _originalClaims, _proof)
}

// ZKFaultDisputeGameChallengeBySignalCreatedIterator is returned from FilterChallengeBySignalCreated and is used to iterate over the raw logs and unpacked data for ChallengeBySignalCreated events raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameChallengeBySignalCreatedIterator struct {
	Event *ZKFaultDisputeGameChallengeBySignalCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZKFaultDisputeGameChallengeBySignalCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZKFaultDisputeGameChallengeBySignalCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZKFaultDisputeGameChallengeBySignalCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZKFaultDisputeGameChallengeBySignalCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZKFaultDisputeGameChallengeBySignalCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZKFaultDisputeGameChallengeBySignalCreated represents a ChallengeBySignalCreated event raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameChallengeBySignalCreated struct {
	DisputeClaimIndex *big.Int
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterChallengeBySignalCreated is a free log retrieval operation binding the contract event 0x5d0aa65efd6bc0b5d87c52082ef77498d3d4a1fcbc8b89a0ab8fd3a14ed85161.
//
// Solidity: event ChallengeBySignalCreated(uint256 indexed _disputeClaimIndex)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) FilterChallengeBySignalCreated(opts *bind.FilterOpts, _disputeClaimIndex []*big.Int) (*ZKFaultDisputeGameChallengeBySignalCreatedIterator, error) {

	var _disputeClaimIndexRule []interface{}
	for _, _disputeClaimIndexItem := range _disputeClaimIndex {
		_disputeClaimIndexRule = append(_disputeClaimIndexRule, _disputeClaimIndexItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.FilterLogs(opts, "ChallengeBySignalCreated", _disputeClaimIndexRule)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameChallengeBySignalCreatedIterator{contract: _ZKFaultDisputeGame.contract, event: "ChallengeBySignalCreated", logs: logs, sub: sub}, nil
}

// WatchChallengeBySignalCreated is a free log subscription operation binding the contract event 0x5d0aa65efd6bc0b5d87c52082ef77498d3d4a1fcbc8b89a0ab8fd3a14ed85161.
//
// Solidity: event ChallengeBySignalCreated(uint256 indexed _disputeClaimIndex)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) WatchChallengeBySignalCreated(opts *bind.WatchOpts, sink chan<- *ZKFaultDisputeGameChallengeBySignalCreated, _disputeClaimIndex []*big.Int) (event.Subscription, error) {

	var _disputeClaimIndexRule []interface{}
	for _, _disputeClaimIndexItem := range _disputeClaimIndex {
		_disputeClaimIndexRule = append(_disputeClaimIndexRule, _disputeClaimIndexItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.WatchLogs(opts, "ChallengeBySignalCreated", _disputeClaimIndexRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZKFaultDisputeGameChallengeBySignalCreated)
				if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "ChallengeBySignalCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseChallengeBySignalCreated is a log parse operation binding the contract event 0x5d0aa65efd6bc0b5d87c52082ef77498d3d4a1fcbc8b89a0ab8fd3a14ed85161.
//
// Solidity: event ChallengeBySignalCreated(uint256 indexed _disputeClaimIndex)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) ParseChallengeBySignalCreated(log types.Log) (*ZKFaultDisputeGameChallengeBySignalCreated, error) {
	event := new(ZKFaultDisputeGameChallengeBySignalCreated)
	if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "ChallengeBySignalCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ZKFaultDisputeGameResolvedIterator is returned from FilterResolved and is used to iterate over the raw logs and unpacked data for Resolved events raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameResolvedIterator struct {
	Event *ZKFaultDisputeGameResolved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZKFaultDisputeGameResolvedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZKFaultDisputeGameResolved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZKFaultDisputeGameResolved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZKFaultDisputeGameResolvedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZKFaultDisputeGameResolvedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZKFaultDisputeGameResolved represents a Resolved event raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameResolved struct {
	Status uint8
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterResolved is a free log retrieval operation binding the contract event 0x5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60.
//
// Solidity: event Resolved(uint8 indexed status)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) FilterResolved(opts *bind.FilterOpts, status []uint8) (*ZKFaultDisputeGameResolvedIterator, error) {

	var statusRule []interface{}
	for _, statusItem := range status {
		statusRule = append(statusRule, statusItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.FilterLogs(opts, "Resolved", statusRule)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameResolvedIterator{contract: _ZKFaultDisputeGame.contract, event: "Resolved", logs: logs, sub: sub}, nil
}

// WatchResolved is a free log subscription operation binding the contract event 0x5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60.
//
// Solidity: event Resolved(uint8 indexed status)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) WatchResolved(opts *bind.WatchOpts, sink chan<- *ZKFaultDisputeGameResolved, status []uint8) (event.Subscription, error) {

	var statusRule []interface{}
	for _, statusItem := range status {
		statusRule = append(statusRule, statusItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.WatchLogs(opts, "Resolved", statusRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZKFaultDisputeGameResolved)
				if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "Resolved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseResolved is a log parse operation binding the contract event 0x5e186f09b9c93491f14e277eea7faa5de6a2d4bda75a79af7a3684fbfb42da60.
//
// Solidity: event Resolved(uint8 indexed status)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) ParseResolved(log types.Log) (*ZKFaultDisputeGameResolved, error) {
	event := new(ZKFaultDisputeGameResolved)
	if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "Resolved", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ZKFaultDisputeGameSubmitProofForSignalCreatedIterator is returned from FilterSubmitProofForSignalCreated and is used to iterate over the raw logs and unpacked data for SubmitProofForSignalCreated events raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameSubmitProofForSignalCreatedIterator struct {
	Event *ZKFaultDisputeGameSubmitProofForSignalCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZKFaultDisputeGameSubmitProofForSignalCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZKFaultDisputeGameSubmitProofForSignalCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZKFaultDisputeGameSubmitProofForSignalCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZKFaultDisputeGameSubmitProofForSignalCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZKFaultDisputeGameSubmitProofForSignalCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZKFaultDisputeGameSubmitProofForSignalCreated represents a SubmitProofForSignalCreated event raised by the ZKFaultDisputeGame contract.
type ZKFaultDisputeGameSubmitProofForSignalCreated struct {
	DisputeClaimIndex *big.Int
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterSubmitProofForSignalCreated is a free log retrieval operation binding the contract event 0x4c8916d6922facb329b3384e6c6b8441702f97ae6320597e1c5d0c245e5402ec.
//
// Solidity: event SubmitProofForSignalCreated(uint256 indexed _disputeClaimIndex)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) FilterSubmitProofForSignalCreated(opts *bind.FilterOpts, _disputeClaimIndex []*big.Int) (*ZKFaultDisputeGameSubmitProofForSignalCreatedIterator, error) {

	var _disputeClaimIndexRule []interface{}
	for _, _disputeClaimIndexItem := range _disputeClaimIndex {
		_disputeClaimIndexRule = append(_disputeClaimIndexRule, _disputeClaimIndexItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.FilterLogs(opts, "SubmitProofForSignalCreated", _disputeClaimIndexRule)
	if err != nil {
		return nil, err
	}
	return &ZKFaultDisputeGameSubmitProofForSignalCreatedIterator{contract: _ZKFaultDisputeGame.contract, event: "SubmitProofForSignalCreated", logs: logs, sub: sub}, nil
}

// WatchSubmitProofForSignalCreated is a free log subscription operation binding the contract event 0x4c8916d6922facb329b3384e6c6b8441702f97ae6320597e1c5d0c245e5402ec.
//
// Solidity: event SubmitProofForSignalCreated(uint256 indexed _disputeClaimIndex)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) WatchSubmitProofForSignalCreated(opts *bind.WatchOpts, sink chan<- *ZKFaultDisputeGameSubmitProofForSignalCreated, _disputeClaimIndex []*big.Int) (event.Subscription, error) {

	var _disputeClaimIndexRule []interface{}
	for _, _disputeClaimIndexItem := range _disputeClaimIndex {
		_disputeClaimIndexRule = append(_disputeClaimIndexRule, _disputeClaimIndexItem)
	}

	logs, sub, err := _ZKFaultDisputeGame.contract.WatchLogs(opts, "SubmitProofForSignalCreated", _disputeClaimIndexRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZKFaultDisputeGameSubmitProofForSignalCreated)
				if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "SubmitProofForSignalCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSubmitProofForSignalCreated is a log parse operation binding the contract event 0x4c8916d6922facb329b3384e6c6b8441702f97ae6320597e1c5d0c245e5402ec.
//
// Solidity: event SubmitProofForSignalCreated(uint256 indexed _disputeClaimIndex)
func (_ZKFaultDisputeGame *ZKFaultDisputeGameFilterer) ParseSubmitProofForSignalCreated(log types.Log) (*ZKFaultDisputeGameSubmitProofForSignalCreated, error) {
	event := new(ZKFaultDisputeGameSubmitProofForSignalCreated)
	if err := _ZKFaultDisputeGame.contract.UnpackLog(event, "SubmitProofForSignalCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
